{"version":3,"sources":["api/jsom/jsom.js","api/jsom/helpers.js","api/requests/getUserRequest.js","constants/columns.js","constants/config.js","api/requests/getPhoneBookRequest.js","api/requests/searchPhoneBookRequest.js","api/requests/addThankYouRequest.js","actions/user.js","actions/phonebook.js","actions/thankYou.js","modules/thankYouList/actions/thankYou.js","sagas/addThankYou.js","modules/peoplePicker/actions/people.js","modules/peoplePicker/api/searchPeopleRequest.js","modules/peoplePicker/sagas/peopleWatcher.js","modules/peoplePicker/reducers/peoplePicker.js","modules/peoplePicker/selectors/selectPeople.js","modules/getUserListId/actions/userList.js","modules/personalCard/actions/presonalCardActions.js","modules/personalCard/api/getAllThanksRequest.js","modules/personalCard/api/getWeekThanksRequest.js","modules/personalCard/sagas/getThanksWatcher.js","modules/personalCard/reducers/thanks.js","modules/personalCard/selectors/getAll.js","modules/personalCard/selectors/selectToday.js","modules/personalCard/selectors/selectAll.js","modules/personalCard/selectors/selectMonth.js","modules/personalCard/selectors/selectUserInfo.js","modules/personalCard/components/personcardthanks/personcardthanks.js","modules/personalCardAwards/actions/actions.js","modules/personalCardAwards/api/getDataRequest.js","modules/personalCardAwards/sagas/watcher.js","modules/personalCardAwards/reducers/reducer.js","modules/personalCardAwards/selectors/select.js","modules/personalCardAwards/container/personalCardAwards.js","components/avatar/avatar.js","modules/personalCard/components/personcard/personcard.js","modules/personalCard/container/personalCard.js","modules/userInfo/actions/userInfo.js","modules/peoplePicker/components/Autocomplete/Autocomplete.js","modules/peoplePicker/container/PeoplePicker.js","modules/getUserListId/api/getUserByAccountNameRequest.js","modules/getUserListId/api/getListItemByUserIdRequest.js","modules/getUserListId/api/getCurrentRequest.js","modules/getUserListId/api/addListItemByUserRequest.js","modules/getUserListId/sagas/usersWatcher.js","modules/getUserListId/reducers/users.js","modules/select/actions/select.js","modules/select/api/getSelectDataRequest.js","modules/select/sagas/selectWatcher.js","modules/select/reducers/select.js","modules/select/selectors/selectOptions.js","modules/select/container/select.js","modules/thankYouList/api/getThankYouRequest.js","modules/thankYouList/sagas/getThankYouWatcher.js","modules/thankYouList/reducers/thankYou.js","modules/thankYouList/selectors/selectThankYou.js","modules/likes/actions/actions.js","modules/likes/api/getDataRequest.js","modules/likes/sagas/watcher.js","modules/likes/reducers/reducer.js","modules/likes/container/like.js","modules/thankYouList/components/thankYouItem/thankYouItem.js","modules/thankYouList/container/thankYouList.js","modules/userInfo/api/getUsersInfoRequest.js","modules/userInfo/sagas/userInfoWatcher.js","modules/userInfo/reducers/usersInfo.js","modules/userInfo/container/userInfo.js","modules/who/actions/actions.js","modules/who/api/getDataRequest.js","modules/who/sagas/watcher.js","modules/who/reducers/reducer.js","modules/who/selectors/select.js","components/badgesidebar/badgesidebar.js","modules/who/container/who.js","modules/whom/actions/actions.js","modules/whom/api/getDataRequest.js","modules/whom/sagas/watcher.js","modules/whom/reducers/reducer.js","modules/whom/selectors/select.js","modules/whom/container/whom.js","sagas/index.js","reducers/status.js","reducers/index.js","store.js","history.js","components/clouds/clouds.js","pages/default/default.js","components/regions/regions.js","components/textarea/textarea.js","components/tenInput/tenInput.js","components/form/form.js","components/footer/footer.js","components/header/header.js","App.js","serviceWorker.js","index.js"],"names":["JSOM","url","context","SP","window","Microsoft","web","ClientContext","get_current","get_web","user","get_currentUser","publicFunctions","lists","listObj","setListObj","listName","listId","get","listTitleOrId","Promise","resolve","reject","targetList","getList","fields","get_fields","load","executeQueryAsync","get_title","get_id","toString","sender","args","console","log","get_message","get_stackTrace","getItems","caml","position","viewFields","query","camlQuery","CamlQuery","set_listItemCollectionPosition","set_viewXml","targetListItems","fieldsText","l","length","i","map","value","addItems","arr","listItemInfo","ListItemCreationInformation","arrValue","addItem","Object","keys","fieldName","set_item","update","updateItems","getItemById","ID","deleteItems","deleteObject","getListTitle","setLike","itemId","SOD","executeFunc","Office","Server","ReputationModel","Reputation","terms","termSetIdArr","termStore","Taxonomy","TaxonomySession","getTaxonomySession","get_termStores","getById","termStoreId","termsList","termSet","getTermSet","getAllTerms","files","createDocFolder","libName","folderName","folder","getFolderByServerRelativeUrl","oList","get_lists","getByTitle","itemCreateInfo","set_underlyingObjectType","FileSystemObjectType","set_leafName","item","file","listItem","obj","getFileByServerRelativeUrl","filePath","get_listItemAllFields","users","getCurrent","usersArr","self","requestSearchUserArr","requestUserArr","userId","indexOf","push","collListItemArr","userID","currentUser","ensureUser","replace","acitem","check","userFullInfo","then","data","groups","groupsList","groupUserEnumerator","getEnumerator","moveNext","groupUser","name","id","userArr","collListItem","userInfoList","get_siteUserInfoList","get_groups","search","people","key","searchFields","keywordQuery","SharePoint","Client","Search","Query","KeywordQuery","set_queryText","properties","get_selectProperties","add","set_sourceId","results","SearchExecutor","executeQuery","mentionSearch","keyText","trim","set_startRow","set_trimDuplicates","set_rowLimit","text","contentTypeId","propertiesArr","quantity","startRow","orderByFieldNames","pathArr","sourceid","ctypeText","ctypeLength","index","pathText","pathLength","propertie","set_enableSorting","set_enablePhonetic","set_culture","sort","get_sortList","asc","testListTitleId","split","Helpers","getRandomInt","min","max","Math","floor","random","replaceSym","cutScript","str","re","decodeHtml","html","txt","document","createElement","innerHTML","strip","tmp","textContent","innerText","replaceDIV","replaceFont","replaceStyle","replaceToBR","replaceBRtoN","replaceDIVtoN","removeArr","from","to","rest","slice","apply","linkify","inputText","replacePattern1","replacePattern2","replacePattern3","getAllParams","params","location","aItKey","nKeyId","aCouples","substr","decodeURIComponent","getURLParameter","retUrl","decodeURI","RegExp","exec","nameOfMonth","month","ru","monthsName","enumerator","type","listItemEnumerator","listArr","oListItem","get_objectData","get_label","get_termGuid","Title","get_name","URL","get_serverRelativeUrl","get_fieldValues","array","$a","$b","a","b","parseInt","Date","wordEnd","num","words","abs","wordEndEn","nextPage","nextPagingInfo","get_listItemCollectionPosition","get_pagingInfo","ListItemCollectionPosition","set_pagingInfo","prevPage","prevPagingInfo","itemAt","columns","title","width","dataIndex","searchKey","fixed","render","phone","getURI","href","formatNational","mail","date","format","maxBonusToSend","jsom","column","addThankYouRequest","payload","createActions","getUser","getUserSuccess","getUserFailure","getPhoneBook","getPhoneBookSuccess","getPhoneBookFailure","searchPhoneBook","searchPhoneBookSuccess","searchPhoneBookFailure","addThankYou","addThankYouSuccess","addThankYouFailure","addThankYouIdle","getThankYou","getThankYouSuccess","getThankYouFailure","getThankYouIdle","addThankYouSaga","addThankYouWatcher","action","call","response","put","takeEvery","searchPeople","searchPeopleSuccess","searchPeopleFailure","searchPeopleIdle","searchPeopleRequest","request","result","m_value","ResultTables","ResultRows","count","TotalRows","searchPeopleSaga","peopleWatcher","handleActions","state","status","keyword","peoplePicker","combineReducers","selectPeople","createSelector","modules","FirstName","LastName","AccountName","WorkEmail","getUserListId","getUserListIdSuccess","getUserListIdFailure","getUserListIdIdle","setUserIdToList","getWeekThanks","getWeekThanksSuccess","getWeekThanksFailure","getWeekThanksIdle","setTodayThanks","getTodayThanks","getTodayThanksSuccess","getTodayThanksFailure","getTodayThanksIdle","setMonthThanks","getMonthThanks","getMonthThanksSuccess","getMonthThanksFailure","getMonthThanksIdle","getAllThanks","getAllThanksSuccess","getAllThanksFailure","getAllThanksIdle","helper","getAllThanksRequest","CamlBuilder","View","Scope","ViewScope","RecursiveAll","RowLimit","Where","LookupField","Id","EqualTo","ToString","getWeekThanksRequest","userListId","And","DateTimeField","GreaterThanOrEqualTo","monday","getAllThanksSaga","getWeekThanksSaga","getThanksWatcher","statusAll","statusWeek","all","day","week","counter","AppScores","thanks","getAll","selectToday","items","retObj","moment","Created","selectAll","selectMonth","selectUserInfo","usersInfo","info","jobTitle","JobTitle","office","picture","Picture","get_url","email","EMail","PersonCardThanks","this","props","popup","today","dayFromMonday","isoWeekday","subtract","addThankYouStatus","className","Component","connect","getAwards","getAwardsSuccess","getAwardsFailure","getAwardsIdle","getDataRequest","LeftJoin","Select","saga","awardsWatcher","awards","selectAwards","AppBadge","get_lookupValue","image","AppBadgeImage","PersonalCardAwards","src","alt","PureComponent","Avatar","show","handleMouseEnter","e","noHover","setState","handleMouseLeave","rating","onMouseEnter","onMouseLeave","PersonCard","PersonalCard","idToList","getUsersInfo","getUsersInfoSuccess","getUsersInfodFailure","getUsersInfoIdle","addUsersToRequest","setCurrentUserInfo","renderSuggestion","suggestion","getSuggestions","inputValue","toLowerCase","filter","Autocomplete","getSuggestionValue","onChange","event","newValue","onSuggestionsFetchRequested","onSuggestionsClearRequested","selectedUserId","usersRequests","inputProps","placeholder","suggestions","list","PeoplePicker","getUserByAccountNameRequest","acountName","userData","get_data","helpers","getListItemByUserIdRequest","getCurrentRequest","addListItemByUserRequest","addObj","getUserSaga","usersWatcher","curUser","getSelectData","getSelectDataSuccess","getSelectDataFailure","getSelectDataIdle","getSelectDataRequest","selectSaga","selectWatcher","options","select","selectOptions","retOptions","option","label","handleChange","listTitle","getThankYouRequest","OrderByDesc","getThankYouSaga","getThankYouWatcher","thankYou","selectThankYou","retItems","AppFrom","fromId","get_lookupId","fromUserId","AppFromUserId","AppTo","toId","toUserId","AppToUserId","scores","AppText","nomination","AppNomination","likedBy","LikedBy","liker","likesCount","LikesCount","setLikeSuccess","setLikeFailure","setLikeIdle","likeWatcher","like","Like","liked","handleClick","onClick","ThankYouItem","children","dangerouslySetInnerHTML","__html","ThankYouList","currentUserId","getUsersInfoRequest","idsArr","userInfoWatcher","objToReturn","userObj","objectToReturn","UserInfo","getWho","getWhoSuccess","getWhoFailure","getWhoIdle","whoWatcher","who","selectWho","AppUserId","AppFromCount","BadgeSidebar","Who","whoItems","getWhom","getWhomSuccess","getWhomFailure","getWhomIdle","whomWatcher","whom","selectWhom","AppToCount","Whom","whomItems","fork","createAppStore","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","run","sagas","createBrowserHistory","forceRefresh","Clouds","Default","style","zIndex","Textarea","target","addEmoji","test","contentEditable","Emoji","emoji","size","current","focus","sel","range","getSelection","getRangeAt","rangeCount","deleteContents","el","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","cloneRange","setStartAfter","collapse","removeAllRanges","addRange","selection","createRange","pasteHTML","pasteHtmlAtCaret","pickerShow","React","createRef","set","onSelect","innerRef","TenInput","handleMinus","handlePlus","Form","disabled","form","handleSubmit","preventDefault","Footer","ThanksHeader","App","history","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c04a02d.chunk.js","sourcesContent":["import { termStoreId } from \"../../constants\";\nexport const JSOM = function(url) {\n  const SP = window.SP;\n  const Microsoft = window.Microsoft;\n  let context;\n  if (url) {\n    context = new SP.ClientContext(url);\n  } else {\n    context = new SP.ClientContext.get_current();\n  }\n  const web = context.get_web();\n  const user = web.get_currentUser();\n\n  const publicFunctions = {\n    lists: {\n      listObj: {},\n      setListObj: (listName, listId) => {\n        if (listName && listId)\n          publicFunctions.lists.listObj[listName] = listId;\n      },\n      get: listTitleOrId => {\n        return new Promise((resolve, reject) => {\n          const targetList = getList(listTitleOrId);\n          const fields = targetList.get_fields();\n          context.load(targetList);\n          context.load(fields);\n          context.executeQueryAsync(\n            () => {\n              if (targetList) {\n                publicFunctions.lists.setListObj(\n                  targetList.get_title(),\n                  targetList.get_id().toString()\n                );\n              }\n              resolve({ targetList, fields });\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      },\n      getItems: (listTitleOrId, caml, position, viewFields) => {\n        return new Promise((resolve, reject) => {\n          const targetList = getList(listTitleOrId);\n          let query;\n          if (caml) {\n            query = caml;\n          } else {\n            query =\n              \"<View Scope='RecursiveAll'><Query><OrderBy><FieldRef Name='ID' Ascending='FALSE'></FieldRef></OrderBy></Query></View>\";\n          }\n          const camlQuery = new SP.CamlQuery();\n          camlQuery.set_listItemCollectionPosition(position);\n          camlQuery.set_viewXml(query);\n          const targetListItems = targetList.getItems(camlQuery);\n          context.load(targetList);\n          let fieldsText = \"\";\n          if (viewFields) {\n            const l = viewFields.length;\n            let i = 1;\n            viewFields.map(value => {\n              fieldsText += value + (i < l ? \", \" : \"\");\n              i++;\n            });\n            context.load(targetListItems, \"Include(\" + fieldsText + \")\");\n          } else {\n            context.load(targetListItems);\n          }\n          context.executeQueryAsync(\n            () => {\n              if (targetList) {\n                publicFunctions.lists.setListObj(\n                  targetList.get_title(),\n                  targetList.get_id().toString()\n                );\n              }\n              resolve({ targetListItems, targetList });\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      },\n      addItems: (listTitleOrId, arr) => {\n        return new Promise((resolve, reject) => {\n          const targetList = getList(listTitleOrId);\n          const listItemInfo = new SP.ListItemCreationInformation();\n          let targetListItems;\n          arr.map(arrValue => {\n            targetListItems = targetList.addItem(listItemInfo);\n            Object.keys(arrValue).map(fieldName => {\n              if (fieldName !== \"ID\") {\n                targetListItems.set_item(fieldName, arrValue[fieldName]);\n              }\n            });\n            targetListItems.update();\n          });\n          context.executeQueryAsync(\n            () => {\n              resolve(targetListItems);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      },\n      updateItems: (listTitleOrId, arr) => {\n        return new Promise((resolve, reject) => {\n          var targetList = getList(listTitleOrId);\n          let targetListItems;\n          arr.map(arrValue => {\n            targetListItems = targetList.getItemById(arrValue.ID);\n            Object.keys(arrValue).map(fieldName => {\n              if (fieldName !== \"ID\") {\n                targetListItems.set_item(fieldName, arrValue[fieldName]);\n              }\n            });\n            targetListItems.update();\n          });\n          context.executeQueryAsync(\n            () => {\n              if (targetList) {\n                publicFunctions.lists.setListObj(\n                  targetList.get_title(),\n                  targetList.get_id().toString()\n                );\n              }\n              resolve(targetListItems);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      },\n      deleteItems: (listTitleOrId, arr) => {\n        return new Promise((resolve, reject) => {\n          var targetList = getList(listTitleOrId);\n          var targetListItems;\n          arr.map(arrValue => {\n            targetListItems = targetList.getItemById(arrValue.ID);\n            targetListItems.deleteObject();\n          });\n          context.executeQueryAsync(\n            () => {\n              if (targetList) {\n                publicFunctions.lists.setListObj(\n                  targetList.get_title(),\n                  targetList.get_id().toString()\n                );\n              }\n              resolve(targetListItems);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      },\n      getListTitle: listId => {\n        return new Promise((resolve, reject) => {\n          var targetList = getList(listId);\n          context.load(targetList);\n          context.executeQueryAsync(\n            () => {\n              if (targetList) {\n                publicFunctions.lists.setListObj(\n                  targetList.get_title(),\n                  targetList.get_id().toString()\n                );\n              }\n              resolve(targetList);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      },\n      setLike: function(listId, itemId, setLike) {\n        return new Promise((resolve, reject) => {\n          SP.SOD.executeFunc(\n            \"reputation.js\",\n            \"Microsoft.Office.Server.ReputationModel.Reputation\",\n            function() {\n              Microsoft.Office.Server.ReputationModel.Reputation.setLike(\n                context,\n                listId,\n                itemId,\n                setLike\n              );\n              context.executeQueryAsync(\n                () => {\n                  resolve();\n                },\n                (sender, args) => {\n                  console.log(sender);\n                  console.log(\n                    \"Request failed. \" +\n                      args.get_message() +\n                      \"\\n\" +\n                      args.get_stackTrace()\n                  );\n                  reject(args);\n                }\n              );\n            }\n          );\n        });\n      }\n    },\n    terms: {\n      get: termSetIdArr => {\n        return new Promise((resolve, reject) => {\n          var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\n          var termStore = session.get_termStores().getById(termStoreId);\n          var termsList = [];\n          var termSet = [];\n          var i = 0;\n          termSetIdArr.map(value => {\n            termSet[i] = termStore.getTermSet(value);\n            termsList[i] = termSet[i].getAllTerms();\n            context.load(termSet[i]);\n            context.load(\n              termsList[i],\n              \"Include(IsRoot, Labels, TermsCount, CustomSortOrder, Id, Name, PathOfTerm, TermSet.Name, LocalCustomProperties, IsDeprecated)\"\n            );\n            i++;\n          });\n          context.executeQueryAsync(\n            () => {\n              resolve({ termsList, termSet });\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      }\n    },\n    files: {\n      createDocFolder: function(libName, folderName) {\n        return new Promise((resolve, reject) => {\n          var folder = context\n            .get_web()\n            .getFolderByServerRelativeUrl(\"/\" + libName + \"/\" + folderName);\n          context.load(folder, \"Exists\", \"Name\");\n          context.executeQueryAsync(\n            () => {\n              resolve();\n              console.log(\"Папка уже существует\");\n            },\n            () => {\n              console.log(\"Папки нет, создаем ее\");\n              var oList = context\n                .get_web()\n                .get_lists()\n                .getByTitle(libName);\n              var itemCreateInfo = new SP.ListItemCreationInformation();\n              itemCreateInfo.set_underlyingObjectType(\n                SP.FileSystemObjectType.folder\n              );\n              itemCreateInfo.set_leafName(folderName);\n              var item = oList.addItem(itemCreateInfo);\n              item.set_item(\"ContentTypeId\", \"0x0120\");\n              item.set_item(\"Title\", folderName);\n              item.update();\n              context.load(item);\n              context.executeQueryAsync(\n                function() {\n                  resolve();\n                },\n                function() {\n                  reject();\n                }\n              );\n            }\n          );\n        });\n      },\n      update: arr => {\n        return new Promise((resolve, reject) => {\n          let file;\n          let listItem;\n          arr.map(obj => {\n            file = web.getFileByServerRelativeUrl(obj.filePath);\n            listItem = file.get_listItemAllFields();\n            Object.keys(obj).map(fieldName => {\n              if (\n                fieldName !== \"\" &&\n                obj[fieldName] &&\n                fieldName !== \"filePath\"\n              ) {\n                listItem.set_item(fieldName, obj[fieldName]);\n              }\n            });\n            listItem.update();\n          });\n          context.executeQueryAsync(\n            () => {\n              resolve(listItem);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      }\n    },\n    users: {\n      getCurrent: () => {\n        return new Promise((resolve, reject) => {\n          context.load(user);\n          context.executeQueryAsync(\n            () => {\n              resolve(user);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      },\n      get: usersArr => {\n        const self = publicFunctions.users;\n        return new Promise((resolve, reject) => {\n          var requestSearchUserArr = [];\n          var requestUserArr = [];\n          usersArr.map(userId => {\n            if (userId) {\n              if (typeof userId == \"string\" && userId.indexOf(\"|\") > -1) {\n                requestSearchUserArr.push(userId);\n              } else {\n                requestUserArr.push(userId);\n              }\n            }\n          });\n          if (requestSearchUserArr.length > 0) {\n            var collListItemArr = [];\n            requestSearchUserArr.map(userID => {\n              var currentUser = web.ensureUser(userID.replace(/_/, \"\\\\\"));\n              collListItemArr.push(currentUser);\n              context.load(currentUser);\n            });\n            context.executeQueryAsync(\n              () => {\n                collListItemArr.map(acitem => {\n                  var check = true;\n                  if (requestUserArr.indexOf(acitem.get_id()) !== -1) {\n                    check = false;\n                  }\n                  if (check) {\n                    requestUserArr.push(acitem.get_id());\n                  }\n                });\n                self.userFullInfo(requestUserArr).then(data => {\n                  const groups = groupsList(data.groups);\n                  resolve(data, groups);\n                });\n              },\n              (sender, args) => {\n                console.log(sender);\n                console.log(\n                  \"Request failed. \" +\n                    args.get_message() +\n                    \"\\n\" +\n                    args.get_stackTrace()\n                );\n                reject(args);\n              }\n            );\n          } else if (requestUserArr.length > 0) {\n            self.userFullInfo(requestUserArr).then(data => {\n              const groups = groupsList(data.groups);\n              resolve(data, groups);\n            });\n          } else {\n            resolve();\n          }\n          function groupsList(groups) {\n            if (groups) {\n              var groupUserEnumerator = groups.getEnumerator();\n              const groups = [];\n              while (groupUserEnumerator.moveNext()) {\n                var groupUser = groupUserEnumerator.get_current();\n                groups.push({\n                  name: groupUser.get_title(),\n                  id: groupUser.get_id()\n                });\n              }\n              return groups;\n            }\n          }\n        });\n      },\n      userFullInfo: userArr => {\n        return new Promise((resolve, reject) => {\n          var userInfoList = web.get_siteUserInfoList();\n          var camlQuery = new SP.CamlQuery();\n          var collListItemArr = [];\n          var collListItem;\n          var groups = user.get_groups();\n          userArr.map(userID => {\n            camlQuery.set_viewXml(\n              \"<View><Query><Where><Eq><FieldRef Name='ID'/><Value Type='Number'>\" +\n                userID +\n                \"</Value></Eq></Where></Query><RowLimit>1</RowLimit></View>\"\n            );\n            collListItem = userInfoList.getItems(camlQuery);\n            collListItemArr.push(collListItem);\n            context.load(collListItem);\n          });\n          context.load(groups);\n          context.executeQueryAsync(\n            () => {\n              resolve(collListItemArr, groups);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      }\n    },\n    search: {\n      people: (key, searchFields) => {\n        return new Promise((resolve, reject) => {\n          var keywordQuery = new Microsoft.SharePoint.Client.Search.Query.KeywordQuery(\n            context\n          );\n          keywordQuery.set_queryText(key);\n          var properties = keywordQuery.get_selectProperties();\n          if (searchFields) {\n            searchFields.map(value => {\n              properties.add(value);\n            });\n          }\n          keywordQuery.set_sourceId(\"b09a7990-05ea-4af9-81ef-edfab16c4e31\");\n          var searchExecutor = new Microsoft.SharePoint.Client.Search.Query.SearchExecutor(\n            context\n          );\n          var results = searchExecutor.executeQuery(keywordQuery);\n          context.executeQueryAsync(\n            () => {\n              resolve(results);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      },\n      mentionSearch: function(key) {\n        return new Promise((resolve, reject) => {\n          var keywordQuery = new Microsoft.SharePoint.Client.Search.Query.KeywordQuery(\n            context\n          );\n          key = key.trim();\n          var keyText = key;\n          key = \"\";\n          key =\n            key +\n            \"(LastName:\" +\n            keyText +\n            \"* OR \" +\n            \"FirstName:\" +\n            keyText +\n            \"*)\";\n          keywordQuery.set_queryText(key);\n          var properties = keywordQuery.get_selectProperties();\n          properties.add(\"LastName\");\n          properties.add(\"FirstName\");\n          keywordQuery.set_startRow(0);\n          keywordQuery.set_trimDuplicates(true);\n          keywordQuery.set_rowLimit(500);\n          keywordQuery.set_sourceId(\"b09a7990-05ea-4af9-81ef-edfab16c4e31\");\n          var searchExecutor = new Microsoft.SharePoint.Client.Search.Query.SearchExecutor(\n            context\n          );\n          const results = searchExecutor.executeQuery(keywordQuery);\n          context.executeQueryAsync(\n            () => {\n              resolve(results);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      },\n      text: function(\n        text,\n        contentTypeId,\n        propertiesArr,\n        quantity,\n        startRow,\n        orderByFieldNames,\n        pathArr,\n        sourceid\n      ) {\n        return new Promise((resolve, reject) => {\n          var ctypeText = \"\";\n          quantity = quantity || 10;\n          startRow = startRow || 0;\n          if (contentTypeId) {\n            var ctypeLength = contentTypeId.length;\n            ctypeText += \" AND (\";\n            contentTypeId.map((value, index) => {\n              ctypeText += \"ContentTypeId:\" + value + \"*\";\n              if (index < ctypeLength - 1) {\n                ctypeText += \" OR \";\n              }\n            });\n            ctypeText += \")\";\n          }\n          var pathText = \"\";\n          if (pathArr) {\n            var pathLength = pathArr.length;\n            pathText += \" AND (\";\n            pathArr.map((value, index) => {\n              pathText += \"Path:\" + value;\n              if (index < pathLength - 1) {\n                pathText += \" OR \";\n              }\n            });\n            pathText += \")\";\n          }\n          let key = \"(\" + text + \") \" + pathText + ctypeText;\n\n          var keywordQuery = new Microsoft.SharePoint.Client.Search.Query.KeywordQuery(\n            context\n          );\n          keywordQuery.set_trimDuplicates(false);\n          keywordQuery.set_queryText(key);\n          var properties = keywordQuery.get_selectProperties();\n          if (propertiesArr) {\n            propertiesArr.map(propertie => {\n              properties.add([propertie]);\n            });\n          }\n          keywordQuery.set_rowLimit(quantity);\n          keywordQuery.set_enableSorting(true);\n          keywordQuery.set_startRow(startRow);\n          keywordQuery.set_enablePhonetic(true);\n          var culture = 1049;\n          keywordQuery.set_culture(culture);\n          if (sourceid) {\n            keywordQuery.set_sourceId(sourceid);\n          }\n          var sort = keywordQuery.get_sortList();\n          if (typeof orderByFieldNames == \"object\") {\n            orderByFieldNames.map(value => {\n              if (value.asc === true) {\n                value.asc = 1;\n              } else {\n                value.asc = 0;\n              }\n              sort.add(value.name, value.asc);\n            });\n          }\n          var searchExecutor = new Microsoft.SharePoint.Client.Search.Query.SearchExecutor(\n            context\n          );\n          var results = searchExecutor.executeQuery(keywordQuery);\n\n          context.executeQueryAsync(\n            () => {\n              resolve(results);\n            },\n            (sender, args) => {\n              console.log(sender);\n              console.log(\n                \"Request failed. \" +\n                  args.get_message() +\n                  \"\\n\" +\n                  args.get_stackTrace()\n              );\n              reject(args);\n            }\n          );\n        });\n      }\n    }\n  };\n  function getList(listTitleOrId) {\n    var testListTitleId = listTitleOrId.trim().split(\"-\");\n    if (\n      testListTitleId.length === 5 &&\n      testListTitleId[0].length === 8 &&\n      testListTitleId[1].length === 4 &&\n      testListTitleId[2].length === 4 &&\n      testListTitleId[3].length === 4 &&\n      testListTitleId[4].length === 12\n    ) {\n      return web.get_lists().getById(listTitleOrId);\n    } else {\n      return web.get_lists().getByTitle(listTitleOrId);\n    }\n  }\n  return publicFunctions;\n};\n","export const Helpers = function() {\n  var publicFunctions = {\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    },\n    replaceSym: function(value) {\n      value = value.replace(/[\"]/g, \"&#034;\");\n      value = value.replace(/[“]/g, \"&#034;\");\n      value = value.replace(/[”]/g, \"&#034;\");\n      value = value.replace(/[—]/g, \"&mdash;\");\n      value = value.replace(/[–]/g, \"&ndash;\");\n      value = value.replace(/[’]/g, \"&#039;\");\n      value = value.replace(/[•]/g, \"&bull;\");\n      value = value.replace(/[＆]/g, \"&\");\n      value = value.replace(/[']/g, \"&#039;\");\n      value = value.replace(/[\\\\]/g, \"&#092;\");\n      var re = /[\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u037F-\\u0383\\u038B\\u038D\\u03A2\\u0528-\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B-\\u058E\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u0605\\u061C\\u061D\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08A1\\u08AD-\\u08E3\\u08FF\\u0978\\u0980\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0C00\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C34\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5A-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C81\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D01\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5F\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F5-\\u13FF\\u169D-\\u169F\\u16F1-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191D-\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7-\\u1CFF\\u1DE7-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BB-\\u20CF\\u20F1-\\u20FF\\u218A-\\u218F\\u23F4-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2700\\u2B4D-\\u2B4F\\u2B5A-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E3C-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FCD-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA698-\\uA69E\\uA6F8-\\uA6FF\\uA78F\\uA794-\\uA79F\\uA7AB-\\uA7F7\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FC-\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9E0-\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAA7C-\\uAA7F\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F-\\uABBF\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE27-\\uFE2F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF]/g;\n      return value.replace(re, \"\");\n    },\n    cutScript: function(str) {\n      var re = /(<script\\b[^>]*>)[^]*?(<\\/script>)/g;\n      str = str.replace(re, \"\");\n      var re = /(&lt;script\\b[^>]*&gt;)[^]*?(&lt;\\/script&gt;)/g;\n      str = str.replace(re, \"\");\n      return str;\n    },\n    decodeHtml: function(html) {\n      var txt = document.createElement(\"textarea\");\n      txt.innerHTML = html;\n      return txt.value;\n    },\n    strip: function(html) {\n      var tmp = document.createElement(\"DIV\");\n      tmp.innerHTML = html;\n      return tmp.textContent || tmp.innerText || \"\";\n    },\n    replaceDIV: function(str) {\n      str = str.replace(/<\\/div>/gi, \"\\n\");\n      str = str.replace(/<div[^>]*>/gi, \"\");\n      return str;\n    },\n    replaceFont: function(str) {\n      str = str.replace(/<\\/font>/gi, \"\");\n      str = str.replace(/<font[^>]*>/gi, \"\");\n      return str;\n    },\n    replaceStyle: function(str) {\n      str = str.replace(/style=[\"'][^\"']*[\"']/gi, \"\");\n      return str;\n    },\n    replaceToBR: function(str) {\n      str = str.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\n      return str;\n    },\n    replaceBRtoN: function(str) {\n      str = str.replace(/<br[^>]*>/gi, \"\\n\");\n      return str;\n    },\n    replaceDIVtoN: function(str) {\n      str = str.replace(/<\\/div>/gi, \"\\n\");\n      str = str.replace(/<div[^>]*>/gi, \"\");\n      return str;\n    },\n    removeArr: function(arr, from, to) {\n      var rest = arr.slice((to || from) + 1 || arr.length);\n      arr.length = from < 0 ? arr.length + from : from;\n      return arr.push.apply(arr, rest);\n    },\n    linkify: function(inputText) {\n      var replacedText, replacePattern1, replacePattern2, replacePattern3;\n\n      //URLs starting with http://, https://, or ftp://\n      replacePattern1 = /(( |>)\\b(https?|ftp):\\/\\/[-A-Z0-9А-Я+&@#\\/%?=~_|!:,.;]*[-A-Z0-9А-Я+&@#\\/%=~_|])/gim;\n      replacedText = inputText.replace(replacePattern1, '<a href=\"$1\">$1</a>');\n\n      //URLs starting with \"www.\" (without // before it, or it'd re-link the ones done above).\n      replacePattern2 = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\n      replacedText = replacedText.replace(\n        replacePattern2,\n        '$1<a href=\"http://$2\">$2</a>'\n      );\n\n      //Change email addresses to mailto:: links.\n      replacePattern3 = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\n      replacedText = replacedText.replace(\n        replacePattern3,\n        '<a href=\"mailto:$1\">$1</a>'\n      );\n\n      return replacedText;\n    },\n    getAllParams: function() {\n      const params = {};\n      if (window.location.search.length > 1) {\n        for (\n          var aItKey,\n            nKeyId = 0,\n            aCouples = window.location.search.substr(1).split(\"&\");\n          nKeyId < aCouples.length;\n          nKeyId++\n        ) {\n          aItKey = aCouples[nKeyId].split(\"=\");\n          params[decodeURIComponent(aItKey[0])] =\n            aItKey.length > 1 ? decodeURIComponent(aItKey[1]) : \"\";\n        }\n      }\n      return params;\n    },\n    getURLParameter: function(name) {\n      var retUrl = decodeURI(\n        (RegExp(name + \"=\" + \"(.+?)(&|$)\").exec(window.location.search) || [\n          ,\n          null\n        ])[1]\n      );\n      if (retUrl === \"null\") {\n        retUrl = null;\n      }\n      return retUrl;\n    },\n    nameOfMonth: function(month, ru) {\n      var monthsName = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ];\n      if (ru)\n        monthsName = [\n          \"января\",\n          \"февраля\",\n          \"марта\",\n          \"апреля\",\n          \"мая\",\n          \"июня\",\n          \"июля\",\n          \"августа\",\n          \"сентября\",\n          \"октября\",\n          \"ноября\",\n          \"декабря\"\n        ];\n      return monthsName[month];\n    },\n    enumerator: (arr, type) => {\n      var listItemEnumerator = arr.getEnumerator();\n      var listArr = [];\n      while (listItemEnumerator.moveNext()) {\n        var oListItem = listItemEnumerator.get_current();\n        if (type === \"terms\") {\n          listArr.push(oListItem.get_objectData());\n        } else if (type === \"termsList\") {\n          listArr.push({\n            name: oListItem.get_label(),\n            id: oListItem.get_termGuid()\n          });\n        } else if (type == \"files\") {\n          listArr.push({\n            Title: oListItem.get_name(),\n            ID: oListItem.get_id().toString(),\n            URL: oListItem.get_serverRelativeUrl()\n          });\n        } else if (type == \"all\") {\n          listArr.push(oListItem);\n        } else {\n          listArr.push(oListItem.get_fieldValues());\n        }\n      }\n      return listArr;\n    },\n    sort: function(array, key, asc, type) {\n      var $a, $b;\n      if (asc) {\n        asc = 1;\n      } else {\n        asc = -1;\n      }\n      array = array.sort(function(a, b) {\n        if (type == \"int\") {\n          $a = parseInt(a[key]);\n          $b = parseInt(b[key]);\n        } else if (type == \"date\") {\n          $a = new Date(a[key]);\n          $b = new Date(b[key]);\n        } else {\n          $a = a[key];\n          $b = b[key];\n        }\n        if ($a > $b) {\n          return 1 * asc;\n        } else if ($a < $b) {\n          return -1 * asc;\n        } else {\n          return 0;\n        }\n      });\n      return array;\n    },\n    wordEnd: function(num, words) {\n      return words[\n        ((num = Math.abs(num % 100)) > 10 && num < 15) ||\n        (num %= 10) > 4 ||\n        num === 0\n          ? 2\n          : num === 1\n          ? 0\n          : 1\n      ];\n    },\n    wordEndEn: function(num, words) {\n      return words[num > 1 ? 1 : 0];\n    },\n    nextPage: function(data) {\n      let position = null;\n      let nextPagingInfo = null;\n      if (data && data.get_listItemCollectionPosition()) {\n        nextPagingInfo = data.get_listItemCollectionPosition().get_pagingInfo();\n        const SP = window.SP;\n        position = new SP.ListItemCollectionPosition();\n        position.set_pagingInfo(nextPagingInfo);\n      }\n      return position;\n    },\n    prevPage: function(data) {\n      let position = null;\n      let prevPagingInfo = null;\n      if (data && data.itemAt(0)) {\n        prevPagingInfo =\n          \"PagedPrev=TRUE&Paged=TRUE&p_ID=\" + data.itemAt(0).get_id();\n        const SP = window.SP;\n        position = new SP.ListItemCollectionPosition();\n        position.set_pagingInfo(prevPagingInfo);\n      }\n      return position;\n    }\n  };\n  return publicFunctions;\n};\n","import { JSOM } from \"../jsom\";\n\nconst jsom = JSOM();\nconst { users } = jsom;\nexport const getUserRequest = payload => {\n  return new Promise((resolve, reject) => {\n    users.getCurrent().then(data => {\n      const user = data;\n      window.user = data;\n      const userId = data.get_id();\n      users.get([userId]).then(data => {\n        data = data[0].get_data();\n        const userData = data[0];\n        window.user2 = userData.get_fieldValues();\n        let groups = user.get_groups();\n        groups = groups.get_data();\n        const groupsArr = [];\n        groups.map(item => {\n          groupsArr.push({ id: item.get_id(), title: item.get_title() });\n        });\n        // console.log(\"Groups: \", groups);\n        resolve({ current: userData.get_fieldValues(), groups: groupsArr });\n      });\n    });\n  });\n};\n","import React, { Fragment } from \"react\";\nimport Moment from \"react-moment\";\n\nexport const columns = [\n  {\n    title: \"ФИО\",\n    width: 300,\n    dataIndex: \"Title\",\n    key: \"Title\",\n    searchKey: \"Title\",\n    fixed: \"left\"\n  },\n  {\n    title: \"Пол\",\n    width: 50,\n    dataIndex: \"Sex\",\n    key: \"Sex\",\n    searchKey: \"SexOWSCHCS\"\n  },\n  {\n    title: \"Название организации\",\n    dataIndex: \"CompanyName\",\n    key: \"CompanyName\",\n    searchKey: \"CompanyNameOWSMTXT\",\n    width: 200\n  },\n  {\n    title: \"Тип организации\",\n    dataIndex: \"CompanyType\",\n    key: \"CompanyType\",\n    searchKey: \"CompanyTypeOWSTEXT\",\n    width: 200\n  },\n  {\n    title: \"Фамилия\",\n    dataIndex: \"LastName\",\n    key: \"LastName\",\n    searchKey: \"LastNameOWSTEXT\",\n    width: 200\n  },\n  {\n    title: \"Имя\",\n    dataIndex: \"FirstName1\",\n    key: \"FirstName1\",\n    searchKey: \"FirstName1OWSTEXT\",\n    width: 200\n  },\n  {\n    title: \"Должность/отдел\",\n    dataIndex: \"JobTitle1\",\n    key: \"JobTitle1\",\n    searchKey: \"JobTitle1OWSMTXT\",\n    width: 200\n  },\n  {\n    title: \"Адрес\",\n    dataIndex: \"FullAddress\",\n    key: \"FullAddress\",\n    searchKey: \"FullAddressOWSMTXT\",\n    width: 400\n  },\n  {\n    title: \"Телефон (основной)\",\n    dataIndex: \"PhoneMain\",\n    key: \"PhoneMain\",\n    searchKey: \"PhoneMainOWSTEXT\",\n    width: 200,\n    render: phone => {\n      if (phone && phone.getURI) {\n        return (\n          phone && (\n            <Fragment>\n              <a href={phone.getURI()}>{phone.formatNational()}</a>\n            </Fragment>\n          )\n        );\n      } else {\n        return phone;\n      }\n    }\n  },\n  {\n    title: \"Телефон (мобильный)\",\n    dataIndex: \"PhoneMobile\",\n    key: \"PhoneMobile\",\n    searchKey: \"PhoneMobileOWSTEXT\",\n    width: 200,\n    render: phone => {\n      if (phone && phone.getURI) {\n        return (\n          phone && (\n            <Fragment>\n              <a href={phone.getURI()}>{phone.formatNational()}</a>\n            </Fragment>\n          )\n        );\n      } else {\n        return phone;\n      }\n    }\n  },\n  {\n    title: \"E-mail (основной)\",\n    dataIndex: \"EmailMain\",\n    key: \"EmailMain\",\n    searchKey: \"EmailMainOWSTEXT\",\n    width: 200,\n    render: mail => {\n      return mail && <a href={\"mailto:\" + mail}>{mail}</a>;\n    }\n  },\n  {\n    title: \"Сайт организации\",\n    key: \"CompanySite\",\n    dataIndex: \"CompanySite\",\n    searchKey: \"CompanySiteOWSTEXT\",\n    width: 300\n  },\n  {\n    title: \"ДР\",\n    key: \"BirthDayDate\",\n    dataIndex: \"BirthDayDate\",\n    searchKey: \"BirthDayDateOWSDATE\",\n    width: 200,\n    render: date => {\n      return date && <Moment format=\"DD MMMM\">{date}</Moment>;\n    }\n  },\n  {\n    title: \"Подарок\",\n    key: \"Gift\",\n    dataIndex: \"Gift\",\n    searchKey: \"GiftOWSCHCS\",\n    width: 100\n  }\n];\n","export const urlDefault = \"/sites/projects-RU-Platform/App\";\nexport const usersList = \"AppUsers\";\nexport const userField = \"AppUser\";\nexport const userFieldId = \"AppUserId\";\nexport const thankYouList = \"AppThankYou\";\nexport const maxBonusToSend = 10;\n\nexport const thankYouListId = \"f0116dc6-3888-47bd-bd8a-c953ae83ee27\";\n\n\nexport const phoneBookContentTypeId = \"0x0100524D5AD12B95F84988089FD0F3C575A8\";\nexport const phoneBookListName = \"PhoneBook\";\nexport const tableRowLimit = 9;\n","import { JSOM, Helpers } from \"../jsom\";\nimport CamlBuilder from \"camljs\";\nimport { columns } from \"../../constants/columns\";\nimport { phoneBookListName, tableRowLimit } from \"../../constants/config\";\nconst jsom = JSOM();\nconst helpers = Helpers();\nconst { lists } = jsom;\n\nlet viewFields = [];\ncolumns.map(column => {\n  viewFields = [...viewFields, column.key];\n});\nviewFields = [...viewFields, \"ID\", \"Created\"];\nconst sortField = \"ID\";\nconst rowLimit = tableRowLimit;\n\nexport const getPhoneBookRequest = action => {\n  const { payload } = action;\n  let ID, position;\n  if (payload) {\n    ID = payload.ID;\n    position = payload.position;\n  }\n  const camlBuilder = new CamlBuilder();\n  let caml = camlBuilder\n    .View(viewFields)\n    .Scope(CamlBuilder.ViewScope.RecursiveAll)\n    .RowLimit(rowLimit)\n    .Query();\n  if (ID) {\n    caml = caml\n      .Where()\n      .LookupField(\"ID\")\n      .Id()\n      .EqualTo(ID);\n  }\n  caml = caml.OrderByDesc(sortField).ToString();\n  return new Promise((resolve, reject) => {\n    lists.getItems(phoneBookListName, caml, position).then(data => {\n      const { targetList, targetListItems } = data;\n      const nextPage = helpers.nextPage(targetListItems);\n      const prevPage = helpers.prevPage(targetListItems);\n      const count = targetList.get_itemCount();\n      const result = helpers.enumerator(targetListItems);\n      resolve({ result, count, nextPage, prevPage });\n    });\n  });\n};","import { JSOM } from \"../jsom\";\nimport { phoneBookContentTypeId, tableRowLimit } from \"../../constants/config\";\nimport { columns } from \"../../constants/columns\";\nconst jsom = JSOM();\nconst { search } = jsom;\n\nlet viewFields = [];\ncolumns.map(column => {\n  viewFields = [...viewFields, column.searchKey];\n});\nviewFields = [...viewFields, \"ListItemID\", \"Created\"];\nlet startRow;\nexport const searchPhoneBookRequest = action => {\n  return new Promise((resolve, reject) => {\n    const { payload } = action;\n    let request;\n    if (payload) {\n      request = payload.request;\n      startRow = payload.position;\n    }\n    if (!startRow) startRow = 0;\n    search\n      .text(\n        request,\n        //[phoneBookContentTypeId],\n        null,\n        viewFields,\n        tableRowLimit,\n        startRow\n      )\n      .then(data => {\n        const result = data.m_value.ResultTables[0].ResultRows;\n        const nextPage = startRow + tableRowLimit;\n        let prevPage = startRow - tableRowLimit;\n        if (prevPage < 1) prevPage = 0;\n        const count = data.m_value.ResultTables[0].TotalRows;\n        resolve({ result, count, nextPage, prevPage });\n      });\n  });\n};\n","import { JSOM } from \"../jsom\";\nimport { thankYouList } from \"../../constants/config\";\nconst jsom = JSOM();\nconst { lists } = jsom;\n\nexport const addThankYouRequest = payload => {\n  return new Promise((resolve, reject) => {\n    lists.addItems(thankYouList, [payload]).then(data => {\n      resolve();\n    });\n  });\n};\n","import { createActions } from \"redux-actions\";\n\nconst {\n  getUser,\n  getUserSuccess,\n  getUserFailure\n} = createActions(\n  \"GET_USER\",\n  \"GET_USER_SUCCESS\",\n  \"GET_USER_FAILURE\"\n);\n\nexport {\n  getUser,\n  getUserSuccess,\n  getUserFailure\n};\n","import { createActions } from \"redux-actions\";\n\nconst {\n  getPhoneBook,\n  getPhoneBookSuccess,\n  getPhoneBookFailure,\n  searchPhoneBook,\n  searchPhoneBookSuccess,\n  searchPhoneBookFailure\n} = createActions(\n  \"GET_PHONE_BOOK\",\n  \"GET_PHONE_BOOK_SUCCESS\",\n  \"GET_PHONE_BOOK_FAILURE\",\n  \"SEARCH_PHONE_BOOK\",\n  \"SEARCH_PHONE_BOOK_SUCCESS\",\n  \"SEARCH_PHONE_BOOK_FAILURE\"\n);\n\nexport {\n  getPhoneBook,\n  getPhoneBookSuccess,\n  getPhoneBookFailure,\n  searchPhoneBook,\n  searchPhoneBookSuccess,\n  searchPhoneBookFailure\n};\n","import { createActions } from \"redux-actions\";\n\nconst {\n  addThankYou,\n  addThankYouSuccess,\n  addThankYouFailure,\n  addThankYouIdle\n} = createActions(\n  \"ADD_THANK_YOU\",\n  \"ADD_THANK_YOU_SUCCESS\",\n  \"ADD_THANK_YOU_FAILURE\",\n  \"ADD_THANK_YOU_IDLE\",\n  \"GET_THANK_YOU\",\n  \"GET_THANK_YOU_SUCCESS\",\n  \"GET_THANK_YOU_FAILURE\"\n);\n\nexport { addThankYou, addThankYouSuccess, addThankYouFailure, addThankYouIdle };\n","import { createActions } from \"redux-actions\";\n\nconst {\n  getThankYou,\n  getThankYouSuccess,\n  getThankYouFailure,\n  getThankYouIdle\n} = createActions(\n  \"GET_THANK_YOU\",\n  \"GET_THANK_YOU_SUCCESS\",\n  \"GET_THANK_YOU_FAILURE\",\n  \"GET_THANK_YOU_IDLE\"\n);\n\nexport { getThankYou, getThankYouSuccess, getThankYouFailure, getThankYouIdle };\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport { addThankYouRequest } from \"../api/requests\";\nimport {\n  addThankYou,\n  addThankYouSuccess,\n  addThankYouFailure\n} from \"../actions\";\nimport { getThankYou } from \"../modules/thankYouList/actions\";\n\nfunction* addThankYouSaga(action) {\n  try {\n    const { payload } = action;\n    const response = yield call(addThankYouRequest, payload);\n\n    yield put(addThankYouSuccess(response));\n    yield put(getThankYou());\n  } catch (error) {\n    console.log(error);\n    yield put(addThankYouFailure(error));\n  }\n}\n\nexport function* addThankYouWatcher() {\n  yield takeEvery(addThankYou.toString(), addThankYouSaga);\n}\n","import { createActions } from \"redux-actions\";\n\nconst {\n  searchPeople,\n  searchPeopleSuccess,\n  searchPeopleFailure,\n  searchPeopleIdle\n} = createActions(\n  \"SEARCH_PEOPLE\",\n  \"SEARCH_PEOPLE_SUCCESS\",\n  \"SEARCH_PEOPLE_FAILURE\",\n  \"SEARCH_PEOPLE_IDLE\"\n);\n\nexport { searchPeople, searchPeopleSuccess, searchPeopleFailure, searchPeopleIdle };\n","import { JSOM } from \"../../../api/jsom\";\nconst jsom = JSOM();\nconst { search } = jsom;\n\nexport const searchPeopleRequest = action => {\n  return new Promise((resolve, reject) => {\n    const { payload } = action;\n    let request = \"\";\n    if (payload) {\n      request = payload;\n    }\n    search.mentionSearch(request).then(data => {\n      const result = data.m_value.ResultTables[0].ResultRows;\n      const count = data.m_value.ResultTables[0].TotalRows;\n      resolve({ result, count });\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport {\n  searchPeople,\n  searchPeopleSuccess,\n  searchPeopleFailure\n} from \"../actions\";\nimport { searchPeopleRequest } from \"../api\";\n\nfunction* searchPeopleSaga(action) {\n  try {\n    const response = yield call(searchPeopleRequest, action);\n    yield put(searchPeopleSuccess(response));\n  } catch (error) {\n    console.log(error);\n    yield put(searchPeopleFailure(error));\n  }\n}\n\nexport function* peopleWatcher() {\n  yield takeEvery(searchPeople.toString(), searchPeopleSaga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  searchPeople,\n  searchPeopleSuccess,\n  searchPeopleFailure,\n  searchPeopleIdle\n} from \"../actions\";\n\nconst people = handleActions(\n  {\n    [searchPeopleSuccess]: (state, action) => action.payload.result,\n    [searchPeopleIdle]: () => []\n  },\n  []\n);\nconst status = handleActions(\n  {\n    [searchPeopleSuccess]: (state, action) => \"SUCCESS\",\n    [searchPeople]: (state, action) => \"LOADING\",\n    [searchPeopleFailure]: (state, action) => \"FAILURE\",\n    [searchPeopleIdle]: (state, action) => \"IDLE\"\n  },\n  \"IDLE\"\n);\nconst keyword = handleActions(\n  {\n    [searchPeople]: (state, action) => action.payload\n  },\n  \"\"\n);\n\nconst peoplePicker = combineReducers({\n  people,\n  status,\n  keyword\n});\nexport { peoplePicker };\n","import { createSelector } from \"reselect\";\n\nconst getPeople = state => state.modules.peoplePicker.people;\n\nexport const selectPeople = createSelector(\n  [getPeople],\n  people => {\n    const retPeople = people.map(item => {\n      return {\n        name: item.FirstName + \" \" + item.LastName,\n        value: item.AccountName,\n        mail: item.WorkEmail,\n        key: item.WorkEmail\n      };\n    });\n    return retPeople;\n  }\n);\n","import { createActions } from \"redux-actions\";\n\nconst {\n  getUserListId,\n  getUserListIdSuccess,\n  getUserListIdFailure,\n  getUserListIdIdle,\n  setUserIdToList\n} = createActions(\n  \"GET_USER_LIST_ID\",\n  \"GET_USER_LIST_ID_SUCCESS\",\n  \"GET_USER_LIST_ID_FAILURE\",\n  \"GET_USER_LIST_ID_IDLE\",\n  \"SET_USER_ID_TO_LIST\"\n);\n\nexport {\n  getUserListId,\n  getUserListIdSuccess,\n  getUserListIdFailure,\n  getUserListIdIdle,\n  setUserIdToList\n};\n","import { createActions } from \"redux-actions\";\n\nconst {\n  getWeekThanks,\n  getWeekThanksSuccess,\n  getWeekThanksFailure,\n  getWeekThanksIdle\n} = createActions(\n  \"GET_WEEK_THANKS\",\n  \"GET_WEEK_THANKS_SUCCESS\",\n  \"GET_WEEK_THANKS_FAILURE\",\n  \"GET_WEEK_THANKS_IDLE\"\n);\n\nconst {\n  getTodayThanks,\n  getTodayThanksSuccess,\n  getTodayThanksFailure,\n  getTodayThanksIdle,\n  setTodayThanks\n} = createActions(\n  \"GET_TODAY_THANKS\",\n  \"GET_TODAY_THANKS_SUCCESS\",\n  \"GET_TODAY_THANKS_FAILURE\",\n  \"GET_TODAY_THANKS_IDLE\",\n  \"SET_TODAY_THANKS\"\n);\n\nconst {\n  getMonthThanks,\n  getMonthThanksSuccess,\n  getMonthThanksFailure,\n  getMonthThanksIdle,\n  setMonthThanks\n} = createActions(\n  \"GET_MONTH_THANKS\",\n  \"GET_MONTH_THANKS_SUCCESS\",\n  \"GET_MONTH_THANKS_FAILURE\",\n  \"GET_MONTH_THANKS_IDLE\",\n  \"SET_MONTH_THANKS\"\n);\n\nconst {\n  getAllThanks,\n  getAllThanksSuccess,\n  getAllThanksFailure,\n  getAllThanksIdle\n} = createActions(\n  \"GET_ALL_THANKS\",\n  \"GET_ALL_THANKS_SUCCESS\",\n  \"GET_ALL_THANKS_FAILURE\",\n  \"GET_ALL_THANKS_IDLE\"\n);\n\nexport {\n  getWeekThanks,\n  getWeekThanksSuccess,\n  getWeekThanksFailure,\n  getWeekThanksIdle,\n  getTodayThanks,\n  getTodayThanksSuccess,\n  getTodayThanksFailure,\n  getTodayThanksIdle,\n  getMonthThanks,\n  getMonthThanksSuccess,\n  getMonthThanksFailure,\n  getMonthThanksIdle,\n  getAllThanks,\n  getAllThanksSuccess,\n  getAllThanksFailure,\n  getAllThanksIdle,\n  setMonthThanks,\n  setTodayThanks\n};\n","import { JSOM, Helpers } from \"../../../api/jsom\";\nimport CamlBuilder from \"camljs\";\nimport { thankYouList } from \"../../../constants/config\";\nconst jsom = JSOM();\nconst helper = Helpers();\nconst { lists } = jsom;\nconst rowLimit = 1000;\nlet viewFields = [\"ID\", \"Created\", \"AppScores\"];\n\nexport const getAllThanksRequest = payload => {\n  return new Promise((resolve, reject) => {\n    const camlBuilder = new CamlBuilder();\n    const caml = camlBuilder\n      .View(viewFields)\n      .Scope(CamlBuilder.ViewScope.RecursiveAll)\n      .RowLimit(rowLimit)\n      .Query()\n      .Where()\n      .LookupField(\"AppTo\")\n      .Id()\n      .EqualTo(payload)\n      .ToString();\n    lists.getItems(thankYouList, caml).then(data => {\n      const result = helper.enumerator(data.targetListItems);\n      resolve(result);\n    });\n  });\n};\n","import { JSOM, Helpers } from \"../../../api/jsom\";\nimport CamlBuilder from \"camljs\";\nimport { thankYouList } from \"../../../constants/config\";\nconst jsom = JSOM();\nconst helper = Helpers();\nconst { lists } = jsom;\nconst rowLimit = 10;\nlet viewFields = [\"ID\", \"Created\", \"AppScores\"];\n\nexport const getWeekThanksRequest = payload => {\n  return new Promise((resolve, reject) => {\n    const camlBuilder = new CamlBuilder();\n    const caml = camlBuilder\n      .View(viewFields)\n      .Scope(CamlBuilder.ViewScope.RecursiveAll)\n      .RowLimit(rowLimit)\n      .Query()\n      .Where()\n      .LookupField(\"AppFrom\")\n      .Id()\n      .EqualTo(payload.userListId)\n      .And()\n      .DateTimeField(\"Created\")\n      .GreaterThanOrEqualTo(payload.monday)\n      .ToString();\n    lists.getItems(thankYouList, caml).then(data => {\n      const result = helper.enumerator(data.targetListItems);\n      resolve(result);\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport {\n  getAllThanks,\n  getAllThanksFailure,\n  getAllThanksSuccess,\n  getWeekThanks,\n  getWeekThanksFailure,\n  getWeekThanksSuccess\n} from \"../actions\";\nimport { getAllThanksRequest, getWeekThanksRequest } from \"../api\";\n\nfunction* getAllThanksSaga(action) {\n  try {\n    const { payload } = action;\n    const response = yield call(getAllThanksRequest, payload);\n    yield put(getAllThanksSuccess({ [payload]: response }));\n  } catch (error) {\n    console.log(error);\n    yield put(getAllThanksFailure(error));\n  }\n}\n\nfunction* getWeekThanksSaga(action) {\n  try {\n    const { payload } = action;\n    const response = yield call(getWeekThanksRequest, payload);\n    yield put(getWeekThanksSuccess({ [payload.userListId]: response }));\n  } catch (error) {\n    console.log(error);\n    yield put(getWeekThanksFailure(error));\n  }\n}\n\nexport function* getThanksWatcher() {\n  yield takeEvery(getAllThanks.toString(), getAllThanksSaga);\n  yield takeEvery(getWeekThanks.toString(), getWeekThanksSaga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  getAllThanks,\n  getAllThanksSuccess,\n  getAllThanksFailure,\n  getAllThanksIdle,\n  getWeekThanks,\n  getWeekThanksSuccess,\n  getWeekThanksFailure,\n  getWeekThanksIdle,\n  setMonthThanks,\n  setTodayThanks\n} from \"../actions\";\n\nconst statusAll = handleActions(\n  {\n    [getAllThanks]: () => \"LOADING\",\n    [getAllThanksSuccess]: () => \"SUCCESS\",\n    [getAllThanksFailure]: () => \"FAILURE\",\n    [getAllThanksIdle]: () => \"IDLE\"\n  },\n  \"IDLE\"\n);\nconst statusWeek = handleActions(\n  {\n    [getWeekThanks]: () => \"LOADING\",\n    [getWeekThanksSuccess]: () => \"SUCCESS\",\n    [getWeekThanksFailure]: () => \"FAILURE\",\n    [getWeekThanksIdle]: () => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst all = handleActions(\n  {\n    [getAllThanksSuccess]: (state, action) => {\n      return { ...state, ...action.payload };\n    }\n  },\n  {}\n);\nconst day = handleActions(\n  {\n    [setTodayThanks]: (state, action) => {\n      return { ...state, ...action.payload };\n    }\n  },\n  {}\n);\nconst month = handleActions(\n  {\n    [setMonthThanks]: (state, action) => {\n      return { ...state, ...action.payload };\n    }\n  },\n  {}\n);\nconst week = handleActions(\n  {\n    [getWeekThanksSuccess]: (state, action) => {\n      return { ...state, ...action.payload };\n    }\n  },\n  {}\n);\n\nconst count = handleActions(\n  {\n    [getWeekThanksSuccess]: (state, action) => {\n      let counter = 0;\n      Object.keys(action.payload).map(key => {\n        action.payload[key].map(item => {\n          counter += item.AppScores;\n        });\n      });\n      return counter;\n    }\n  },\n  0\n);\n\nconst thanks = combineReducers({\n  statusAll,\n  statusWeek,\n  all,\n  day,\n  month,\n  week,\n  count\n});\nexport { thanks };\n","export const getAll = state => state.modules.thanks.all;","import { createSelector } from \"reselect\";\nimport { getAll } from \"./getAll\";\nimport moment from \"moment\";\n\nexport const selectToday = createSelector(\n  [getAll],\n  items => {\n    let retObj = {};\n    if (Object.keys(items).length > 0) {\n      Object.keys(items).map(key => {\n        let counter = 0;\n        items[key].map(item => {\n          const created = moment(item.Created).format(\"YYYYMMDD\");\n          const now = moment().format(\"YYYYMMDD\");\n          if (created === now) {\n            counter += item.AppScores;\n          }\n        });\n        retObj = { ...retObj, [key]: counter };\n      });\n    }\n    return retObj;\n  }\n);\n","import { createSelector } from \"reselect\";\nimport { getAll } from \"./getAll\";\n\nexport const selectAll = createSelector(\n  [getAll],\n  items => {\n    let retObj = {};\n    if (Object.keys(items).length > 0) {\n      Object.keys(items).map(key => {\n        let counter = 0;\n        items[key].map(item => {\n          counter += item.AppScores;\n        });\n        retObj = { ...retObj, [key]: counter };\n      });\n    }\n    return retObj;\n  }\n);\n","import { createSelector } from \"reselect\";\nimport { getAll } from \"./getAll\";\nimport moment from \"moment\";\n\nexport const selectMonth = createSelector(\n  [getAll],\n  items => {\n    let retObj = {};\n    if (Object.keys(items).length > 0) {\n      Object.keys(items).map(key => {\n        let counter = 0;\n        items[key].map(item => {\n          const created = moment(item.Created).format(\"YYYYMM\");\n          const now = moment().format(\"YYYYMM\");\n          if (created === now) {\n            counter += item.AppScores;\n          }\n        });\n        retObj = { ...retObj, [key]: counter };\n      });\n    }\n    return retObj;\n  }\n);\n","import { createSelector } from \"reselect\";\n\nconst getUserInfo = state => state.modules.usersInfo.info;\n\nexport const selectUserInfo = createSelector(\n  [getUserInfo],\n  items => {\n    let retObj = {};\n    Object.keys(items).map(key => {\n      const item = items[key];\n      if (item) {\n        retObj = {\n          ...retObj,\n          [key]: {\n            title: item.Title,\n            jobTitle: item.JobTitle,\n            office: item.Office,\n            picture: item.Picture && item.Picture.get_url(),\n            email: item.EMail\n          }\n        };\n      }\n    });\n    return retObj;\n  }\n);\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllThanks, getWeekThanks } from \"../../actions\";\nimport { addThankYouIdle } from \"../../../../actions\";\nimport moment from \"moment\";\nimport { maxBonusToSend } from \"../../../../constants/config\";\nimport { selectAll, selectMonth, selectToday } from \"../../selectors\";\n\nclass PersonCardThanks extends Component {\n  state = {};\n  componentDidMount() {\n    const { getAllThanks, getWeekThanks, userListId, popup } = this.props;\n    const today = moment();\n    const dayFromMonday = today.isoWeekday();\n    const monday =\n      today.subtract(dayFromMonday, \"days\").format(\"YYYY-MM-DD\") + \"T14:00:00Z\";\n    getAllThanks(userListId);\n    if (!popup) {\n      getWeekThanks({ userListId, monday });\n    }\n  }\n  componentDidUpdate() {\n    const { addThankYouStatus, userListId, getWeekThanks, popup } = this.props;\n    if (addThankYouStatus === \"SUCCESS\") {\n      if (!popup) {\n        const today = moment();\n        const dayFromMonday = today.isoWeekday();\n        const monday =\n          today.subtract(dayFromMonday, \"days\").format(\"YYYY-MM-DD\") +\n          \"T14:00:00Z\";\n        getWeekThanks({ userListId, monday });\n      }\n    }\n  }\n  render() {\n    const { userListId, count, all, month, today, popup } = this.props;\n    return (\n      <Fragment>\n        <h5>БЛАГОДАРНОСТИ:</h5>\n        <div className=\"flex-spb-t\">\n          {!popup && (\n            <div className=\"flex-col-c-t\">\n              <div className=\"thanks-available num-red\">\n                {maxBonusToSend - count}\n              </div>\n              <span className=\"desc\">ДОСТУПНО</span>\n            </div>\n          )}\n          <div className=\"flex-col-c-t\">\n            <div className=\"thanks-today num-green\">{today[userListId]}</div>\n            <span className=\"desc\">\n              ПОЛУЧЕНО <br />\n              СЕГОДНЯ\n            </span>\n          </div>\n          <div className=\"flex-col-c-t\">\n            <div className=\"thanks-month num-green\">{month[userListId]}</div>\n            <span className=\"desc\">\n              ПОЛУЧЕНО <br />\n              В ЭТОМ МЕСЯЦЕ\n            </span>\n          </div>\n          <div className=\"flex-col-c-t\">\n            <div className=\"thanks-alltime num-green\">{all[userListId]}</div>\n            <span className=\"desc\">\n              ПОЛУЧЕНО <br />\n              ЗА ВСЕ ВРЕМЯ\n            </span>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    count: state.modules.thanks.count,\n    today: selectToday(state),\n    month: selectMonth(state),\n    all: selectAll(state),\n    addThankYouStatus: state.status.addThankYouStatus\n  }),\n  {\n    getAllThanks,\n    getWeekThanks\n  }\n)(PersonCardThanks);\n","import { createActions } from \"redux-actions\";\n\nconst {\n  getAwards,\n  getAwardsSuccess,\n  getAwardsFailure,\n  getAwardsIdle\n} = createActions(\n  \"GET_AWARDS\",\n  \"GET_AWARDS_SUCCESS\",\n  \"GET_AWARDS_FAILURE\",\n  \"GET_AWARDS_IDLE\"\n);\n\nexport { getAwards, getAwardsSuccess, getAwardsFailure, getAwardsIdle };\n","import { JSOM, Helpers } from \"../../../api/jsom\";\nimport CamlBuilder from \"camljs\";\nconst jsom = JSOM();\nconst helper = Helpers();\nconst { lists } = jsom;\nconst rowLimit = 100;\nlet viewFields = [\"ID\", \"Title\", \"AppBadge\", \"AppBadgeImage\"];\n\nexport const getDataRequest = payload => {\n  return new Promise((resolve, reject) => {\n    const camlBuilder = new CamlBuilder();\n    const caml = camlBuilder\n      .View(viewFields)\n      .LeftJoin(\"AppBadge\", \"AppBadge\")\n      .Select(\"AppImageText\", \"AppBadgeImage\")\n      .Scope(CamlBuilder.ViewScope.RecursiveAll)\n      .RowLimit(rowLimit)\n      .Query()\n      .Where()\n      .LookupField(\"AppTo\")\n      .Id()\n      .EqualTo(payload)\n      .ToString();\n    lists.getItems(\"AppBadgesToUsers\", caml).then(data => {\n      const result = helper.enumerator(data.targetListItems);\n      resolve(result);\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport { getAwards, getAwardsSuccess, getAwardsFailure } from \"../actions\";\nimport { getDataRequest } from \"../api\";\n\nfunction* saga(action) {\n  try {\n    const { payload } = action;\n    const response = yield call(getDataRequest, payload);\n    yield put(getAwardsSuccess({ [payload]: response }));\n  } catch (error) {\n    console.log(error);\n    yield put(getAwardsFailure(error));\n  }\n}\n\nexport function* awardsWatcher() {\n  yield takeEvery(getAwards.toString(), saga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  getAwards,\n  getAwardsSuccess,\n  getAwardsFailure,\n  getAwardsIdle\n} from \"../actions\";\n\nconst status = handleActions(\n  {\n    [getAwardsSuccess]: (state, action) => \"SUCCESS\",\n    [getAwards]: (state, action) => \"LOADING\",\n    [getAwardsFailure]: (state, action) => \"FAILURE\",\n    [getAwardsIdle]: (state, action) => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst items = handleActions(\n  {\n    [getAwardsSuccess]: (state, action) => {\n      return { ...state, ...action.payload };\n    }\n  },\n  {}\n);\n\nconst awards = combineReducers({\n  status,\n  items\n});\nexport { awards };\n","import { createSelector } from \"reselect\";\n\nconst getAwards = state => state.modules.awards.items;\n\nexport const selectAwards = createSelector(\n  [getAwards],\n  items => {\n    let retObj = {};\n    Object.keys(items).map(key => {\n      retObj[key] = items[key].map(item => {\n        return {\n          title: item.AppBadge.get_lookupValue(),\n          image: item.AppBadgeImage.get_lookupValue(),\n          key: item.ID\n        };\n      });\n    });\n    return retObj;\n  }\n);\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAwards, getAwardsIdle } from \"../actions\";\nimport { selectAwards } from \"../selectors\";\nimport \"./personalCardAwards.css\";\n\nclass PersonalCardAwards extends PureComponent {\n  state = {};\n  componentDidMount() {\n    const { userListId, getAwards } = this.props;\n    getAwards(userListId);\n  }\n  render() {\n    const { awards, userListId } = this.props;\n    return (\n      <Fragment>\n        {awards[userListId] && awards[userListId].length > 0 && (\n          <h5>НАГРАДЫ:</h5>\n        )}\n        {awards[userListId] && (\n          <div className=\"rewards flex-spb-t\">\n            {awards[userListId].map(item => (\n              <div key={item.key} className=\"flex-col-c-t\">\n                <div className=\"reward\">\n                  <img src={item.image} alt={item.title} />\n                </div>\n                <span className=\"desc\">{item.title}</span>\n              </div>\n            ))}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    awards: selectAwards(state)\n  }),\n  { getAwards, getAwardsIdle }\n)(PersonalCardAwards);\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./avatar.css\";\nimport { PersonalCard } from \"../../modules/personalCard\";\nclass Avatar extends Component {\n  state = {\n    show: false\n  };\n  handleMouseEnter = e => {\n    const { noHover } = this.props;\n    if (!noHover) this.setState({ show: true });\n  };\n  handleMouseLeave = e => {\n    const { noHover } = this.props;\n    if (!noHover) this.setState({ show: false });\n  };\n  render() {\n    const { usersInfo, userId, title, rating } = this.props;\n    const { show } = this.state;\n    return (\n      <Fragment>\n        <div\n          className={title ? \"person-container flex-l-c\" : \"person-container\"}\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n        >\n          <div className=\"person-photo\">\n            {usersInfo[userId] && usersInfo[userId].Picture && (\n              <img src={usersInfo[userId].Picture.get_url()} alt=\"avatar\" />\n            )}\n          </div>\n          {title && (\n            <div className=\"preson-info\">\n              {rating > -1 && <div className=\"person-rating\">{rating}</div>}\n              <div className=\"person-name\">{title}</div>\n            </div>\n          )}\n          {show && <PersonalCard userId={userId} popup={true} />}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    usersInfo: state.modules.usersInfo.info\n  }),\n  {}\n)(Avatar);\n","import React, { PureComponent, Fragment } from \"react\";\nimport PersonCardThanks from \"../personcardthanks\";\nimport { PersonalCardAwards } from \"../../../personalCardAwards\";\nimport Avatar from \"../../../../components/avatar\";\nimport \"./personcard.css\";\nclass PersonCard extends PureComponent {\n  state = {};\n  render() {\n    const { userId, userListId, usersInfo, noHover, popup } = this.props;\n    return (\n      <Fragment>\n        <div className=\"person\">\n          <div className=\"flex-l-c\">\n            <Avatar userId={userId} noHover={noHover} />\n            <div className=\"preson-info\">\n              <div className=\"person-name\">{usersInfo && usersInfo.title}</div>\n              <div className=\"person-data\">\n                <span className=\"person-job\">\n                  {usersInfo && usersInfo.jobTitle}\n                </span>\n                {usersInfo && !!usersInfo.jobTitle && !!usersInfo.office && \"/\"}\n                <span className=\"person-loc\">\n                  {usersInfo && usersInfo.office}\n                </span>\n              </div>\n            </div>\n          </div>\n          {userListId && (\n            <PersonCardThanks userListId={userListId} popup={popup} />\n          )}\n          {userListId && <PersonalCardAwards userListId={userListId} />}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default PersonCard;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./personalCard.css\";\nimport PersonCard from \"../components/personcard\";\nimport { selectUserInfo } from \"../selectors\";\nimport { getUserListId } from \"../../getUserListId/actions\";\n\nclass PersonalCard extends Component {\n  componentDidMount() {\n    const { userId, idToList, getUserListId } = this.props;\n    if (userId && !idToList[userId]) {\n      getUserListId(userId);\n    }\n  }\n  componentDidUpdate() {\n    const { userId, idToList, getUserListId } = this.props;\n    if (userId && !idToList[userId]) {\n      //getUserListId(userId);\n    }\n  }\n  render() {\n    const { usersInfo, userId, idToList, popup } = this.props;\n    return (\n      <Fragment>\n        <PersonCard\n          userId={userId}\n          userListId={idToList[userId]}\n          usersInfo={usersInfo[userId]}\n          popup={popup}\n          noHover={true}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    usersInfo: selectUserInfo(state),\n    idToList: state.modules.users.idToList\n  }),\n  {\n    getUserListId\n  }\n)(PersonalCard);\n","import { createActions } from \"redux-actions\";\n\nconst {\n  getUsersInfo,\n  getUsersInfoSuccess,\n  getUsersInfodFailure,\n  getUsersInfoIdle,\n  addUsersToRequest\n} = createActions(\n  \"GET_USERS_INFO\",\n  \"GET_USERS_INFO_SUCCESS\",\n  \"GET_USERS_INFO_FAILURE\",\n  \"GET_USERS_INFO_IDLE\",\n  \"ADD_USERS_TO_REQUEST\"\n);\n\nconst { setCurrentUserInfo } = createActions(\"SET_CURRENT_USER_INFO\");\n\nexport {\n  getUsersInfo,\n  getUsersInfoSuccess,\n  getUsersInfodFailure,\n  getUsersInfoIdle,\n  addUsersToRequest,\n  setCurrentUserInfo\n};\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Autosuggest from \"react-autosuggest\";\nimport { searchPeople, searchPeopleIdle } from \"../../actions\";\nimport { selectPeople } from \"../../selectors\";\nimport { getUserListId } from \"../../../getUserListId/actions\";\nimport { PersonalCard } from \"../../../personalCard\";\nimport { addUsersToRequest } from \"../../../userInfo/actions\";\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = suggestion => <div>{suggestion.name}</div>;\n\nconst getSuggestions = (value, people) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0\n    ? []\n    : people.filter(item => {\n        return item.name.toLowerCase().indexOf(inputValue) > -1;\n      });\n};\n\nclass Autocomplete extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selectedUserId: null,\n      popup: false,\n      show: false,\n      value: \"\",\n      suggestion: []\n    };\n  }\n  getSuggestionValue = suggestion => {\n    const { getUserListId } = this.props;\n    getUserListId(suggestion.value);\n    this.setState({ show: true });\n    return suggestion.name;\n  };\n\n  componentDidUpdate() {\n    const { addUsersToRequest, user } = this.props;\n    const { selectedUserId } = this.state;\n    if (user && user.userId && selectedUserId !== user.userId) {\n      this.setState({ selectedUserId: user.userId });\n\n      let usersRequests = [];\n      usersRequests = [...usersRequests, user.userId];\n      if (usersRequests.length > 0) {\n        addUsersToRequest(usersRequests);\n      }\n    }\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    const { searchPeople, people } = this.props;\n    if (value.length > 3 && (people.length === 0 || people.length === 500)) {\n      searchPeople(value);\n    } else {\n      this.setState({\n        suggestion: getSuggestions(value, people)\n      });\n    }\n  };\n\n  onSuggestionsClearRequested = () => {\n    const { searchPeopleIdle } = this.props;\n    searchPeopleIdle();\n  };\n  handleMouseEnter = () => {\n    this.setState({ popup: true });\n  };\n  handleMouseLeave = () => {\n    this.setState({ popup: false });\n  };\n  render() {\n    const { value, suggestion, show, popup } = this.state;\n    const { user } = this.props;\n    const inputProps = {\n      placeholder: \"Введите имя или фамилию\",\n      value,\n      onChange: this.onChange\n    };\n    return (\n      <Fragment>\n        <div className=\"peoplePicker\">\n          <Autosuggest\n            suggestions={suggestion}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={this.getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n          />\n          {show && user && user.userId && (\n            <span\n              onMouseEnter={this.handleMouseEnter}\n              onMouseLeave={this.handleMouseLeave}\n              className=\"info\"\n            >\n              i\n              {popup && (\n                <div className=\"badge person-container\">\n                  <PersonalCard userId={user.userId} popup={true} />\n                </div>\n              )}\n            </span>\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\nexport default connect(\n  state => ({\n    people: selectPeople(state),\n    keyword: state.modules.peoplePicker.keyword,\n    status: state.modules.peoplePicker.status,\n    user: state.modules.users.list.to\n  }),\n  { searchPeople, searchPeopleIdle, getUserListId, addUsersToRequest }\n)(Autocomplete);\n","import React, { Component, Fragment } from \"react\";\nimport { Autocomplete } from \"../components\";\nimport \"./PeoplePicker.css\";\n\nclass PeoplePicker extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Autocomplete {...this.props} />\n      </Fragment>\n    );\n  }\n}\n\nexport default PeoplePicker;\n","import { JSOM } from \"../../../api/jsom\";\n\nconst jsom = JSOM();\nconst { users } = jsom;\nexport const getUserByAccountNameRequest = acountName => {\n  return new Promise((resolve, reject) => {\n    users.get([acountName]).then(data => {\n      data = data[0].get_data();\n      const userData = data[0].get_fieldValues();\n      resolve({ userId: userData.ID, title: userData.Title });\n    });\n  });\n};\n","import { JSOM, Helpers } from \"../../../api/jsom\";\nimport CamlBuilder from \"camljs\";\nimport { usersList, userField } from \"../../../constants/config\";\nconst jsom = JSOM();\nconst helpers = Helpers();\nconst { lists } = jsom;\n\nlet viewFields = [\"ID\", \"Title\", userField];\n\nexport const getListItemByUserIdRequest = userId => {\n  const camlBuilder = new CamlBuilder();\n  let caml = camlBuilder\n    .View(viewFields)\n    .Scope(CamlBuilder.ViewScope.RecursiveAll)\n    .RowLimit(1)\n    .Query()\n    .Where()\n    .LookupField(userField)\n    .Id()\n    .EqualTo(userId);\n  caml = caml.ToString();\n  return new Promise((resolve, reject) => {\n    lists.getItems(usersList, caml).then(data => {\n      const { targetListItems } = data;\n      const result = helpers.enumerator(targetListItems);\n      if (result[0]) {\n        resolve(result[0].ID);\n      } else {\n        resolve(null);\n      }\n    });\n  });\n};\n","import { JSOM } from \"../../../api/jsom\";\n\nconst jsom = JSOM();\nconst { users } = jsom;\nexport const getCurrentRequest = payload => {\n  return new Promise((resolve, reject) => {\n    users.getCurrent().then(data => {\n      const userId = data.get_id();\n      const title = data.get_title();\n      resolve({ userId, title });\n    });\n  });\n};\n","import { JSOM } from \"../../../api/jsom\";\nimport { usersList, userField, userFieldId } from \"../../../constants/config\";\nconst jsom = JSOM();\nconst { lists } = jsom;\n\nexport const addListItemByUserRequest = payload => {\n  const { userId, title } = payload;\n  const addObj = [{ [userField]: userId, Title: title, [userFieldId]: userId }];\n  return new Promise((resolve, reject) => {\n    lists.addItems(usersList, addObj).then(data => {\n      if (data.get_id) {\n        resolve(data.get_id());\n      } else {\n        resolve(null);\n      }\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport {\n  getUserListId,\n  getUserListIdSuccess,\n  getUserListIdFailure,\n  setUserIdToList\n} from \"../actions\";\nimport { setCurrentUserInfo, addUsersToRequest } from \"../../userInfo/actions\";\nimport {\n  getUserByAccountNameRequest,\n  getCurrentRequest,\n  getListItemByUserIdRequest,\n  addListItemByUserRequest\n} from \"../api\";\n\nfunction* getUserSaga(action) {\n  const payload = action.payload;\n  try {\n    let userId;\n    let title;\n    if (!payload) {\n      const curUser = yield call(getCurrentRequest);\n      userId = curUser.userId;\n      // userId = 5698;\n      title = curUser.title;\n      yield put(setCurrentUserInfo({ userId }));\n      yield put(addUsersToRequest([userId]));\n    } else {\n      if (!parseInt(payload)) {\n        const user = yield call(getUserByAccountNameRequest, payload);\n        userId = user.userId;\n        title = user.title;\n      } else {\n        userId = parseInt(payload);\n      }\n    }\n    let userListId = yield call(getListItemByUserIdRequest, userId);\n    if (!userListId) {\n      userListId = yield call(addListItemByUserRequest, { userId, title });\n    }\n    if (!payload) {\n      yield put(setCurrentUserInfo({ userListId, title }));\n    }\n    yield put(setUserIdToList({ [userId]: userListId }));\n    if (title) {\n      yield put(\n        getUserListIdSuccess({\n          to: payload,\n          id: userListId,\n          title,\n          userId: userId\n        })\n      );\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(getUserListIdFailure(error));\n  }\n}\n\nexport function* usersWatcher() {\n  yield takeEvery(getUserListId.toString(), getUserSaga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  getUserListId,\n  getUserListIdSuccess,\n  getUserListIdFailure,\n  getUserListIdIdle,\n  setUserIdToList\n} from \"../actions\";\n\nconst list = handleActions(\n  {\n    [getUserListIdSuccess]: (state, action) => {\n      if (action.payload.to) {\n        return { ...state, to: action.payload };\n      } else {\n        return { ...state, from: action.payload };\n      }\n    }\n  },\n  {}\n);\nconst idToList = handleActions(\n  {\n    [setUserIdToList]: (state, action) => {\n      return { ...state, ...action.payload };\n    }\n  },\n  {}\n);\nconst status = handleActions(\n  {\n    [getUserListIdSuccess]: () => \"SUCCESS\",\n    [getUserListId]: () => \"LOADING\",\n    [getUserListIdFailure]: () => \"FAILURE\",\n    [getUserListIdIdle]: () => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst users = combineReducers({\n  status,\n  idToList,\n  list\n});\n\nexport { users };\n","import { createActions } from \"redux-actions\";\n\nconst {\n  getSelectData,\n  getSelectDataSuccess,\n  getSelectDataFailure,\n  getSelectDataIdle\n} = createActions(\n  \"GET_SELECT_DATA\",\n  \"GET_SELECT_DATA_SUCCESS\",\n  \"GET_SELECT_DATA_FAILURE\",\n  \"GET_SELECT_DATA_IDLE\"\n);\n\nexport {\n  getSelectData,\n  getSelectDataSuccess,\n  getSelectDataFailure,\n  getSelectDataIdle\n};\n","import { JSOM, Helpers } from \"../../../api/jsom\";\nimport CamlBuilder from \"camljs\";\nconst jsom = JSOM();\nconst helper = Helpers();\nconst { lists } = jsom;\nconst rowLimit = 100;\nlet viewFields = [\"ID\", \"Title\"];\n\nexport const getSelectDataRequest = action => {\n  return new Promise((resolve, reject) => {\n    const { payload } = action;\n    const camlBuilder = new CamlBuilder();\n    const caml = camlBuilder\n      .View(viewFields)\n      .Scope(CamlBuilder.ViewScope.RecursiveAll)\n      .RowLimit(rowLimit)\n      .Query()\n      .ToString();\n    lists.getItems(payload, caml).then(data => {\n      const result = helper.enumerator(data.targetListItems);\n      resolve({ [payload]: result });\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport {\n  getSelectData,\n  getSelectDataSuccess,\n  getSelectDataFailure\n} from \"../actions\";\nimport { getSelectDataRequest } from \"../api\";\n\nfunction* selectSaga(action) {\n  try {\n    const response = yield call(getSelectDataRequest, action);\n    yield put(getSelectDataSuccess(response));\n  } catch (error) {\n    console.log(error);\n    yield put(getSelectDataFailure(error));\n  }\n}\n\nexport function* selectWatcher() {\n  yield takeEvery(getSelectData.toString(), selectSaga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  getSelectData,\n  getSelectDataSuccess,\n  getSelectDataFailure,\n  getSelectDataIdle\n} from \"../actions\";\n\nconst status = handleActions(\n  {\n    [getSelectDataSuccess]: (state, action) => \"SUCCESS\",\n    [getSelectData]: (state, action) => \"LOADING\",\n    [getSelectDataFailure]: (state, action) => \"FAILURE\",\n    [getSelectDataIdle]: (state, action) => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst options = handleActions(\n  {\n    [getSelectDataSuccess]: (state, action) => {\n      return { ...state, ...action.payload };\n    }\n  },\n  {}\n);\n\nconst select = combineReducers({\n  status,\n  options\n});\nexport { select };\n","import { createSelector } from \"reselect\";\n\nconst getOptions = state => state.modules.select.options;\n\nexport const selectOptions = createSelector(\n  [getOptions],\n  options => {\n    let retOptions = {};\n    Object.keys(options).map(key => {\n      retOptions[key] = options[key].map(option => {\n        return {\n          label: option.Title,\n          value: option.ID,\n          key: option.ID\n        };\n      });\n    });\n    return retOptions;\n  }\n);\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./select.css\";\nimport ReactSelect from \"react-select\";\nimport { getSelectData } from \"../actions\";\nimport { selectOptions } from \"../selectors\";\n\nclass Select extends PureComponent {\n  componentDidMount() {\n    const { getSelectData, listTitle } = this.props;\n    getSelectData(listTitle);\n  }\n  handleChange = option => {\n    const { onChange, name } = this.props;\n    onChange(name, option);\n  };\n  render() {\n    const { options, listTitle, value } = this.props;\n    let selectOptions = [];\n    if (options && options[listTitle]) {\n      selectOptions = options[listTitle];\n    }\n    return (\n      <ReactSelect\n        value={value}\n        onChange={this.handleChange}\n        options={selectOptions}\n        placeholder=\"Выберите номинацию\"\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    options: selectOptions(state)\n  }),\n  { getSelectData }\n)(Select);\n","import { JSOM, Helpers } from \"../../../api/jsom\";\nimport CamlBuilder from \"camljs\";\nimport { thankYouList } from \"../../../constants/config\";\nconst jsom = JSOM();\nconst helper = Helpers();\nconst { lists } = jsom;\nconst rowLimit = 50;\nlet viewFields = [\n  \"ID\",\n  \"Title\",\n  \"AppFrom\",\n  \"AppFromUserId\",\n  \"AppToUserId\",\n  \"AppNomination\",\n  \"AppScores\",\n  \"AppText\",\n  \"AppTo\",\n  \"LikedBy\",\n  \"LikesCount\"\n];\n\nexport const getThankYouRequest = payload => {\n  return new Promise((resolve, reject) => {\n    const camlBuilder = new CamlBuilder();\n    const caml = camlBuilder\n      .View(viewFields)\n      .LeftJoin(\"AppFrom\", \"AppFrom\")\n      .Select(\"AppUserId\", \"AppFromUserId\")\n      .LeftJoin(\"AppTo\", \"AppTo\")\n      .Select(\"AppUserId\", \"AppToUserId\")\n      .Scope(CamlBuilder.ViewScope.RecursiveAll)\n      .RowLimit(rowLimit)\n      .Query()\n      .OrderByDesc(\"ID\")\n      .ToString();\n    lists.getItems(thankYouList, caml).then(data => {\n      const result = helper.enumerator(data.targetListItems);\n      resolve(result);\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport {\n  getThankYou,\n  getThankYouSuccess,\n  getThankYouFailure\n} from \"../actions\";\nimport { getThankYouRequest } from \"../api\";\n\nfunction* getThankYouSaga(action) {\n  try {\n    const { payload } = action;\n    const response = yield call(getThankYouRequest, payload);\n    yield put(getThankYouSuccess(response));\n  } catch (error) {\n    console.log(error);\n    yield put(getThankYouFailure(error));\n  }\n}\n\nexport function* getThankYouWatcher() {\n  yield takeEvery(getThankYou.toString(), getThankYouSaga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  getThankYou,\n  getThankYouSuccess,\n  getThankYouFailure,\n  getThankYouIdle\n} from \"../actions\";\n\nconst status = handleActions(\n  {\n    [getThankYouSuccess]: () => \"SUCCESS\",\n    [getThankYou]: () => \"LOADING\",\n    [getThankYouFailure]: () => \"FAILURE\",\n    [getThankYouIdle]: () => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst items = handleActions(\n  {\n    [getThankYouSuccess]: (state, action) => {\n      return action.payload;\n    }\n  },\n  []\n);\n\nconst thankYou = combineReducers({\n  status,\n  items\n});\nexport { thankYou };\n","import React from \"react\";\nimport { createSelector } from \"reselect\";\nimport Moment from \"react-moment\";\nimport \"moment/locale/ru\";\n\nconst getThankYou = state => state.modules.thankYou.items;\n\nexport const selectThankYou = createSelector(\n  [getThankYou],\n  items => {\n    console.log(items);\n    const retItems = items.map(item => {\n      return {\n        id: item.ID,\n        title: item.Title,\n        from: item.AppFrom.get_lookupValue(),\n        fromId: item.AppFrom.get_lookupId(),\n        fromUserId: parseInt(item.AppFromUserId.get_lookupValue()),\n        to: item.AppTo.get_lookupValue(),\n        toId: item.AppTo.get_lookupId(),\n        toUserId: parseInt(item.AppToUserId.get_lookupValue()),\n        scores: item.AppScores,\n        text: item.AppText,\n        nomination: item.AppNomination.get_lookupValue(),\n        date: <Moment format=\"DD MMMM YYYY HH:mm\">{item.Created}</Moment>,\n        key: item.ID,\n        likedBy:\n          item.LikedBy &&\n          item.LikedBy.map(liker => {\n            return { id: liker.get_lookupId(), name: liker.get_lookupValue() };\n          }),\n        likesCount: item.LikesCount\n      };\n    });\n    console.log(retItems);\n    return retItems;\n  }\n);\n","import { createActions } from \"redux-actions\";\n\nconst { setLike, setLikeSuccess, setLikeFailure, setLikeIdle } = createActions(\n  \"SET_LIKE\",\n  \"SET_LIKE_SUCCESS\",\n  \"SET_LIKE_FAILURE\",\n  \"SET_LIKE_IDLE\"\n);\n\nexport { setLike, setLikeSuccess, setLikeFailure, setLikeIdle };\n","import { JSOM } from \"../../../api/jsom\";\nconst jsom = JSOM();\nconst { lists } = jsom;\n\nexport const getDataRequest = payload => {\n  return new Promise((resolve, reject) => {\n    const { listId, itemId, setLike } = payload;\n    lists.setLike(listId, itemId, setLike).then(data => {\n      resolve({ listId, itemId, setLike });\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport { setLike, setLikeSuccess, setLikeFailure } from \"../actions\";\nimport { getDataRequest } from \"../api\";\n\nfunction* saga(action) {\n  try {\n    const { payload } = action;\n    yield call(getDataRequest, payload);\n    yield put(setLikeSuccess());\n  } catch (error) {\n    console.log(error);\n    yield put(setLikeFailure(error));\n  }\n}\n\nexport function* likeWatcher() {\n  yield takeEvery(setLike.toString(), saga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  setLike,\n  setLikeSuccess,\n  setLikeFailure,\n  setLikeIdle\n} from \"../actions\";\n\nconst status = handleActions(\n  {\n    [setLikeSuccess]: () => \"SUCCESS\",\n    [setLike]: () => \"LOADING\",\n    [setLikeFailure]: () => \"FAILURE\",\n    [setLikeIdle]: () => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst like = combineReducers({\n  status\n});\nexport { like };\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setLike, setLikeIdle } from \"../actions\";\nimport { FaThumbsUp, FaRegThumbsUp } from \"react-icons/fa\";\nimport \"./like.css\";\nclass Like extends PureComponent {\n  state = {\n    liked: false,\n    count: 0\n  };\n  componentDidMount() {\n    let liked = false;\n    let count = 0;\n    const { userId, likedBy, likesCount } = this.props;\n    if (likedBy && likedBy.length > 0) {\n      likedBy.map(liker => {\n        if (liker.id === userId) {\n          liked = true;\n        }\n      });\n      if (likesCount) count = likesCount;\n      this.setState({ liked, count });\n    }\n  }\n  handleClick = e => {\n    const { listId, itemId, setLike } = this.props;\n    const { liked, count } = this.state;\n\n    setLike({ listId, itemId, setLike: !liked });\n    this.setState({ liked: !liked, count: liked ? count - 1 : count + 1 });\n  };\n\n  render() {\n    const { userId, likesCount, likedBy, itemId, listId } = this.props;\n    const { liked, count } = this.state;\n    return (\n      <Fragment>\n        <span className=\"like\" onClick={this.handleClick}>\n          {liked && (\n            <Fragment>\n              <FaThumbsUp className=\"like-icon red\" />\n              <span>\n                Вам {count > 1 && \"и еще \" + (count - 1)} это нравится\n              </span>\n            </Fragment>\n          )}\n          {!liked && (\n            <Fragment>\n              <FaRegThumbsUp className=\"like-icon\" />\n              {count > 0 && count}\n              <span>Нравится</span>\n            </Fragment>\n          )}\n        </span>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({}),\n  { setLike, setLikeIdle }\n)(Like);\n","import React, { Component, Fragment } from \"react\";\nimport Avatar from \"../../../../components/avatar\";\nimport { Like } from \"../../../likes\";\nimport { thankYouListId } from \"../../../../constants/config\";\nclass ThankYouItem extends Component {\n  state = {};\n  render() {\n    const { children, userId } = this.props;\n    return (\n      <Fragment>\n        <div className=\"thx-news-item th10693\">\n          <div className=\"flex-spb-c\">\n            <div className=\"badge flex-l-c\">\n              <Avatar userId={children.fromUserId} title={children.from} />\n            </div>\n\n            <div className=\"badge flex-l-c \">\n              <Avatar userId={children.toUserId} title={children.to} />\n            </div>\n          </div>\n          {children.text && (\n            <div\n              className=\"comment\"\n              dangerouslySetInnerHTML={{ __html: children.text }}\n            />\n          )}\n          <div className=\"comment like\">\n            <span className=\"date\">{children.date}</span>&nbsp;&nbsp;&nbsp;{\" \"}\n            {userId && (\n              <Like\n                listId={thankYouListId}\n                itemId={children.id}\n                likedBy={children.likedBy}\n                likesCount={children.likesCount}\n                userId={userId}\n              />\n            )}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default ThankYouItem;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./thankYouList.css\";\nimport { getThankYou, getThankYouIdle } from \"../actions\";\nimport { addUsersToRequest } from \"../../userInfo/actions\";\nimport { selectThankYou } from \"../selectors\";\nimport ThankYouItem from \"../components/thankYouItem\";\n\nclass ThankYouList extends Component {\n  componentDidMount() {\n    const { getThankYou } = this.props;\n    getThankYou();\n  }\n  componentDidUpdate() {\n    const { addUsersToRequest, thankYou, status, getThankYouIdle } = this.props;\n    if (status === \"SUCCESS\") {\n      getThankYouIdle();\n    }\n    let usersRequests = [];\n    if (thankYou.length > 0) {\n      thankYou.map(item => {\n        usersRequests = [...usersRequests, item.toUserId];\n        usersRequests = [...usersRequests, item.fromUserId];\n      });\n    }\n    if (usersRequests.length > 0) {\n      addUsersToRequest(usersRequests);\n    }\n  }\n  render() {\n    const { thankYou, currentUserId } = this.props;\n    return (\n      <Fragment>\n        <div id=\"thx-news\" className=\"col-8\">\n          <div className=\"head-red angle-left\">\n            <h4>ДОСКА БЛАГОДАРНОСТЕЙ</h4>\n          </div>\n          <div className=\"thanks here\">\n            {thankYou &&\n              thankYou.map(item => (\n                <ThankYouItem key={item.id} userId={currentUserId}>\n                  {item}\n                </ThankYouItem>\n              ))}\n          </div>\n          {/* <div id=\"thx-news-more\" className=\"btn-more all\">\n            ЕЩЁ...\n          </div> */}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    thankYou: selectThankYou(state),\n    status: state.modules.thankYou.status,\n    currentUserId: state.modules.usersInfo.currentUser.userId\n  }),\n  { getThankYou, getThankYouIdle, addUsersToRequest }\n)(ThankYouList);\n","import { JSOM } from \"../../../api/jsom\";\n\nconst jsom = JSOM();\nconst { users } = jsom;\nexport const getUsersInfoRequest = idsArr => {\n  return new Promise((resolve, reject) => {\n    users.get(idsArr).then(data => {\n      resolve(data);\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport {\n  getUsersInfo,\n  getUsersInfoSuccess,\n  getUsersInfodFailure\n} from \"../actions\";\nimport { getUsersInfoRequest } from \"../api\";\n\nfunction* getUserSaga(action) {\n  const payload = action.payload;\n  try {\n    const users = yield call(getUsersInfoRequest, payload);\n    let objToReturn = {};\n    users.map(user => {\n      const data = user.get_data();\n      const userObj = data[0].get_fieldValues();\n      objToReturn = { ...objToReturn, [userObj.ID]: userObj };\n    });\n    yield put(getUsersInfoSuccess(objToReturn));\n  } catch (error) {\n    console.log(error);\n    yield put(getUsersInfodFailure(error));\n  }\n}\n\nexport function* userInfoWatcher() {\n  yield takeEvery(getUsersInfo.toString(), getUserSaga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  getUsersInfo,\n  getUsersInfoSuccess,\n  getUsersInfodFailure,\n  getUsersInfoIdle,\n  addUsersToRequest,\n  setCurrentUserInfo\n} from \"../actions\";\n\nconst info = handleActions(\n  {\n    [getUsersInfoSuccess]: (state, action) => {\n      return { ...state, ...action.payload };\n    },\n    [addUsersToRequest]: (state, action) => {\n      let objectToReturn = {};\n      if (action.payload.length > 0) {\n        action.payload.map(item => {\n          let check = false;\n          Object.keys(state).map(key => {\n            if (parseInt(key) === parseInt(item)) {\n              check = true;\n            }\n          });\n          if (!check) {\n            objectToReturn = { ...objectToReturn, [item]: null };\n          }\n        });\n      }\n      return { ...state, ...objectToReturn };\n    }\n  },\n  {}\n);\nconst currentUser = handleActions(\n  {\n    [setCurrentUserInfo]: (state, action) => {\n      return { ...state, ...action.payload };\n    },\n    [getUsersInfoSuccess]: (state, action) => {\n      if (parseInt(state.userId) === parseInt(Object.keys(action.payload)[0])) {\n        return { ...state, info: action.payload[state.userId] };\n      } else {\n        return state;\n      }\n    }\n  },\n  {}\n);\nconst status = handleActions(\n  {\n    [getUsersInfoSuccess]: (state, action) => \"SUCCESS\",\n    [getUsersInfo]: (state, action) => \"LOADING\",\n    [getUsersInfodFailure]: (state, action) => \"FAILURE\",\n    [getUsersInfoIdle]: (state, action) => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst usersInfo = combineReducers({\n  status,\n  info,\n  currentUser\n});\n\nexport { usersInfo };\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUsersInfo, getUsersInfoIdle, addUsersToRequest } from \"../actions\";\n\nclass UserInfo extends Component {\n  state = {};\n  componentDidMount() {\n    const { getUsersInfo, usersInfo } = this.props;\n    let usersRequests = [];\n    if (Object.keys(usersInfo).length > 0) {\n      Object.keys(usersInfo).map(key => {\n        usersRequests = [...usersRequests, parseInt(key)];\n      });\n    }\n    if (usersRequests.length > 0) {\n      getUsersInfo(usersRequests);\n    }\n  }\n  componentDidUpdate() {\n    const { getUsersInfo, getUsersInfoIdle, usersInfo, status } = this.props;\n    let usersRequests = [];\n    if (status !== \"LOADING\") {\n      if (Object.keys(usersInfo).length > 0) {\n        Object.keys(usersInfo).map(key => {\n          if (!usersInfo[key]) {\n            usersRequests = [...usersRequests, parseInt(key)];\n          }\n        });\n      }\n      if (usersRequests.length > 0) {\n        getUsersInfo(usersRequests);\n      } else {\n        if (status === \"SUCCESS\") {\n          getUsersInfoIdle();\n        }\n      }\n    }\n  }\n\n  render() {\n    return <Fragment />;\n  }\n}\n\nexport default connect(\n  state => ({\n    usersInfo: state.modules.usersInfo.info,\n    status: state.modules.usersInfo.status\n  }),\n  { getUsersInfo, addUsersToRequest, getUsersInfoIdle }\n)(UserInfo);\n","import { createActions } from \"redux-actions\";\n\nconst { getWho, getWhoSuccess, getWhoFailure, getWhoIdle } = createActions(\n  \"GET_WHO\",\n  \"GET_WHO_SUCCESS\",\n  \"GET_WHO_FAILURE\",\n  \"GET_WHO_IDLE\"\n);\n\nexport { getWho, getWhoSuccess, getWhoFailure, getWhoIdle };\n","import { JSOM, Helpers } from \"../../../api/jsom\";\nimport CamlBuilder from \"camljs\";\nconst jsom = JSOM();\nconst helper = Helpers();\nconst { lists } = jsom;\nconst rowLimit = 5;\nlet viewFields = [\"ID\", \"Title\", \"AppUser\", \"AppUserId\", \"AppFromCount\"];\n\nexport const getDataRequest = payload => {\n  return new Promise((resolve, reject) => {\n    const camlBuilder = new CamlBuilder();\n    const caml = camlBuilder\n      .View(viewFields)\n      .Scope(CamlBuilder.ViewScope.RecursiveAll)\n      .RowLimit(rowLimit)\n      .Query()\n      .OrderByDesc(\"AppFromCount\")\n      .ToString();\n    lists.getItems(\"AppUsers\", caml).then(data => {\n      const result = helper.enumerator(data.targetListItems);\n      resolve(result);\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport { getWho, getWhoSuccess, getWhoFailure } from \"../actions\";\nimport { getDataRequest } from \"../api\";\n\nfunction* saga(action) {\n  try {\n    const { payload } = action;\n    const response = yield call(getDataRequest, payload);\n    yield put(getWhoSuccess(response));\n  } catch (error) {\n    console.log(error);\n    yield put(getWhoFailure(error));\n  }\n}\n\nexport function* whoWatcher() {\n  yield takeEvery(getWho.toString(), saga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport { getWho, getWhoSuccess, getWhoIdle, getWhoFailure } from \"../actions\";\n\nconst status = handleActions(\n  {\n    [getWhoSuccess]: () => \"SUCCESS\",\n    [getWho]: () => \"LOADING\",\n    [getWhoFailure]: () => \"FAILURE\",\n    [getWhoIdle]: () => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst items = handleActions(\n  {\n    [getWhoSuccess]: (state, action) => {\n      return action.payload;\n    }\n  },\n  []\n);\n\nconst who = combineReducers({\n  status,\n  items\n});\nexport { who };\n","import { createSelector } from \"reselect\";\n\nconst getWho = state => state.modules.who.items;\n\nexport const selectWho = createSelector(\n  [getWho],\n  items => {\n    const retArr = items.map(item => {\n      return {\n        title: item.Title,\n        userId: item.AppUserId,\n        rating: item.AppFromCount.get_lookupId(),\n        key: item.ID,\n        id: item.ID\n      };\n    });\n    return retArr;\n  }\n);\n","import React, { PureComponent, Fragment } from \"react\";\nimport Avatar from \"../../components/avatar\";\nimport \"./badgesidebar.css\";\nclass BadgeSidebar extends PureComponent {\n  state = {};\n  render() {\n    const { item } = this.props;\n    return (\n      <Fragment>\n        <div className=\"badge flex-l-c\">\n          <Avatar userId={item.userId} title={item.title} rating={item.rating} />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default BadgeSidebar;\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getWho, getWhoIdle } from \"../actions\";\nimport { selectWho } from \"../selectors\";\nimport { addUsersToRequest } from \"../../userInfo/actions\";\nimport BadgeSidebar from \"../../../components/badgesidebar\";\n\nclass Who extends PureComponent {\n  state = {};\n  componentDidMount() {\n    const { getWho } = this.props;\n    getWho();\n  }\n  componentDidUpdate() {\n    const { addUsersToRequest, whoItems, status, getWhoIdle } = this.props;\n    if (status === \"SUCCESS\") {\n      getWhoIdle();\n\n      let usersRequests = [];\n      if (whoItems.length > 0) {\n        whoItems.map(item => {\n          usersRequests = [...usersRequests, item.userId];\n        });\n      }\n      if (usersRequests.length > 0) {\n        addUsersToRequest(usersRequests);\n      }\n    }\n  }\n  render() {\n    const { whoItems } = this.props;\n    return (\n      <Fragment>\n        <div id=\"thx-who\">\n          <div className=\"head-yellow angle-right\">\n            <h4>КТО БЛАГОДАРИТ</h4>\n            <div className=\"flex-c-c relative\">\n              {/* <div id=\"thx-who-1-m\" data-days=\"30\" data-id=\"2\" className=\"btn-filter\">ЗА 1 МЕСЯЦ</div>\n\t\t\t\t\t\t\t\t<div id=\"thx-who-3-m\" data-days=\"90\" data-id=\"2\" className=\"btn-filter\">ЗА 3 МЕСЯЦА</div> */}\n            </div>\n          </div>\n          <div className=\"who reduced\">\n            {whoItems &&\n              whoItems.length > 0 &&\n              whoItems.map(item => (\n                <BadgeSidebar key={item.key} item={item}></BadgeSidebar>\n              ))}\n          </div>\n          {/* <div id=\"thx-who-more\" className=\"btn-more\">ЕЩЁ...</div> */}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    whoItems: selectWho(state),\n    status: state.modules.who.status\n  }),\n  { getWho, getWhoIdle, addUsersToRequest }\n)(Who);\n","import { createActions } from \"redux-actions\";\n\nconst { getWhom, getWhomSuccess, getWhomFailure, getWhomIdle } = createActions(\n  \"GET_WHOM\",\n  \"GET_WHOM_SUCCESS\",\n  \"GET_WHOM_FAILURE\",\n  \"GET_WHOM_IDLE\"\n);\n\nexport { getWhom, getWhomSuccess, getWhomFailure, getWhomIdle };\n","import { JSOM, Helpers } from \"../../../api/jsom\";\nimport CamlBuilder from \"camljs\";\nconst jsom = JSOM();\nconst helper = Helpers();\nconst { lists } = jsom;\nconst rowLimit = 5;\nlet viewFields = [\"ID\", \"Title\", \"AppUser\", \"AppUserId\", \"AppToCount\"];\n\nexport const getDataRequest = payload => {\n  return new Promise((resolve, reject) => {\n    const camlBuilder = new CamlBuilder();\n    const caml = camlBuilder\n      .View(viewFields)\n      .Scope(CamlBuilder.ViewScope.RecursiveAll)\n      .RowLimit(rowLimit)\n      .Query()\n      .OrderByDesc(\"AppToCount\")\n      .ToString();\n    lists.getItems(\"AppUsers\", caml).then(data => {\n      const result = helper.enumerator(data.targetListItems);\n      resolve(result);\n    });\n  });\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport { getWhom, getWhomSuccess, getWhomFailure } from \"../actions\";\nimport { getDataRequest } from \"../api\";\n\nfunction* saga(action) {\n  try {\n    const { payload } = action;\n    const response = yield call(getDataRequest, payload);\n    yield put(getWhomSuccess(response));\n  } catch (error) {\n    console.log(error);\n    yield put(getWhomFailure(error));\n  }\n}\n\nexport function* whomWatcher() {\n  yield takeEvery(getWhom.toString(), saga);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  getWhom,\n  getWhomSuccess,\n  getWhomIdle,\n  getWhomFailure\n} from \"../actions\";\n\nconst status = handleActions(\n  {\n    [getWhomSuccess]: () => \"SUCCESS\",\n    [getWhom]: () => \"LOADING\",\n    [getWhomFailure]: () => \"FAILURE\",\n    [getWhomIdle]: () => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst items = handleActions(\n  {\n    [getWhomSuccess]: (state, action) => {\n      return action.payload;\n    }\n  },\n  []\n);\n\nconst whom = combineReducers({\n  status,\n  items\n});\nexport { whom };\n","import { createSelector } from \"reselect\";\n\nconst getWhom = state => state.modules.whom.items;\n\nexport const selectWhom = createSelector(\n  [getWhom],\n  items => {\n    const retArr = items.map(item => {\n      return {\n        title: item.Title,\n        userId: item.AppUserId,\n        rating: item.AppToCount.get_lookupId(),\n        key: item.ID,\n        id: item.ID\n      };\n    });\n    return retArr;\n  }\n);\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getWhom, getWhomIdle } from \"../actions\";\nimport { selectWhom } from \"../selectors\";\nimport { addUsersToRequest } from \"../../userInfo/actions\";\nimport BadgeSidebar from \"../../../components/badgesidebar\";\n\nclass Whom extends PureComponent {\n  state = {};\n  componentDidMount() {\n    const { getWhom } = this.props;\n    getWhom();\n  }\n  componentDidUpdate() {\n    const { addUsersToRequest, whomItems, status, getWhomIdle } = this.props;\n    if (status === \"SUCCESS\") {\n      getWhomIdle();\n\n      let usersRequests = [];\n      if (whomItems.length > 0) {\n        whomItems.map(item => {\n          usersRequests = [...usersRequests, item.userId];\n        });\n      }\n      if (usersRequests.length > 0) {\n        addUsersToRequest(usersRequests);\n      }\n    }\n  }\n  render() {\n    const { whomItems } = this.props;\n    return (\n      <Fragment>\n        <div id=\"thx-whom\">\n          <div className=\"head-green angle-right\">\n            <h4>КОГО БЛАГОДАРЯТ</h4>\n            <div className=\"flex-c-c relative\">\n              {/* <div id=\"thx-who-1-m\" data-days=\"30\" data-id=\"2\" className=\"btn-filter\">ЗА 1 МЕСЯЦ</div>\n\t\t\t\t\t\t\t\t<div id=\"thx-who-3-m\" data-days=\"90\" data-id=\"2\" className=\"btn-filter\">ЗА 3 МЕСЯЦА</div> */}\n            </div>\n          </div>\n          <div className=\"whom reduced\">\n            {whomItems &&\n              whomItems.length > 0 &&\n              whomItems.map(item => (\n                <BadgeSidebar key={item.key} item={item}></BadgeSidebar>\n              ))}\n          </div>\n          {/* <div id=\"thx-who-more\" className=\"btn-more\">ЕЩЁ...</div> */}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    whomItems: selectWhom(state),\n    status: state.modules.whom.status\n  }),\n  { getWhom, getWhomIdle, addUsersToRequest }\n)(Whom);\n","import { fork } from \"redux-saga/effects\";\nimport { addThankYouWatcher } from \"./addThankYou\";\n\n// MODULES\nimport { peopleWatcher } from \"../modules/peoplePicker\";\nimport { usersWatcher } from \"../modules/getUserListId\";\nimport { selectWatcher } from \"../modules/select\";\nimport { getThankYouWatcher } from \"../modules/thankYouList\";\nimport { userInfoWatcher } from \"../modules/userInfo\";\nimport { getThanksWatcher } from \"../modules/personalCard\";\nimport { awardsWatcher } from \"../modules/personalCardAwards\";\nimport { whoWatcher } from \"../modules/who\";\nimport { whomWatcher } from \"../modules/whom\";\nimport { likeWatcher } from \"../modules/likes\";\n\nexport default function*() {\n  yield fork(addThankYouWatcher);\n\n  //MODULES\n  yield fork(peopleWatcher);\n  yield fork(usersWatcher);\n  yield fork(selectWatcher);\n  yield fork(getThankYouWatcher);\n  yield fork(userInfoWatcher);\n  yield fork(getThanksWatcher);\n  yield fork(awardsWatcher);\n  yield fork(whoWatcher);\n  yield fork(whomWatcher);\n  yield fork(likeWatcher);\n}\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  addThankYou,\n  addThankYouSuccess,\n  addThankYouFailure,\n  addThankYouIdle\n} from \"../actions\";\n\nconst addThankYouStatus = handleActions(\n  {\n    [addThankYou]: () => \"LOADING\",\n    [addThankYouSuccess]: () => \"SUCCESS\",\n    [addThankYouFailure]: () => \"FAILURE\",\n    [addThankYouIdle]: () => \"IDLE\"\n  },\n  \"IDLE\"\n);\n\nconst status = combineReducers({\n  addThankYouStatus\n});\nexport { status };\n","import { combineReducers } from \"redux\";\nimport { status } from \"./status\";\n\n//MODULES\nimport { peoplePicker } from \"../modules/peoplePicker\";\nimport { users } from \"../modules/getUserListId\";\nimport { select } from \"../modules/select\";\nimport { thankYou } from \"../modules/thankYouList\";\nimport { usersInfo } from \"../modules/userInfo\";\nimport { thanks } from \"../modules/personalCard\";\nimport { awards } from \"../modules/personalCardAwards\";\nimport { who } from \"../modules/who\";\nimport { whom } from \"../modules/whom\";\nimport { like } from \"../modules/likes\";\n\nconst modules = combineReducers({\n  peoplePicker,\n  users,\n  select,\n  thankYou,\n  usersInfo,\n  thanks,\n  awards,\n  who,\n  whom,\n  like\n});\n\nexport default combineReducers({\n  status,\n  modules\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from \"./sagas\";\nimport rootReducer from \"./reducers\";\n\nconst createAppStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(sagaMiddleware)\n      // window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      //   window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n\n  sagaMiddleware.run(sagas);\n\n  return store;\n};\n\nexport default createAppStore;\n","import { createBrowserHistory } from 'history'\nexport default createBrowserHistory({\n    forceRefresh: true\n})","import React, { PureComponent, Fragment } from \"react\";\nimport \"./clouds.css\";\nclass Clouds extends PureComponent {\n  state = {};\n  render() {\n    return(\n      <Fragment>\n        <div className=\"clouds-wrap\">\n            <div className=\"cloud cloud1\"></div>\n            <div className=\"cloud cloud2\"></div>\n            <div className=\"cloud cloud3\"></div>\n            <div className=\"cloud cloud4\"></div>\n            <div className=\"cloud cloud5\"></div>\n            <div className=\"cloud cloud6\"></div>\n            <div className=\"cloud cloud7\"></div>\n        </div>\n      </Fragment>\n    ); \n  }\n}\n\nexport default Clouds;\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addThankYou } from \"../../actions\";\nimport { ThankYouList } from \"../../modules/thankYouList\";\nimport { Who } from \"../../modules/who\";\nimport { Whom } from \"../../modules/whom\";\nimport Clouds from \"../../components/clouds\"\nimport Regions from \"../../components/regions\";\nimport \"./default.css\";\n \n\nclass Default extends PureComponent {\n  state = {};\n  componentDidMount() {}\n\n  render() {\n    return (\n     \n        <Fragment>\n          <section>\n\t\t        <div className=\"container\" style={{position:\"relative\",zIndex:1}}>\n              {/* <Regions/> */}\n              <div className=\"flex-spb-t\">\n                <ThankYouList />\n                <div className=\"sidebar col-4\">\n                  <Whom/>\n                  <Who/>\n                </div>\n              </div>\n            </div>\n            <Clouds/>\n          </section>\n        </Fragment>\n    \n    );\n  }\n} \n\nexport default connect(\n  state => ({\n    user: state.user\n  }),{}\n)(Default);\n","import React, { PureComponent, Fragment } from \"react\";\nimport \"./regions.css\";\n\tclass Regions extends PureComponent {\n\tstate = {};\n\trender() {\n\t\treturn(\n\t\t\t<Fragment>\n\t\t\t<div className=\"regionBlock\">\n\t\t\t\t<div className=\"regionHeader\">Регион:</div> \n\t\t\t\t<ul className=\"regionList\">\n\t\t\t\t\t<li data-region=\"All\">Все <span>(10578)</span></li>\n\t\t\t\t\t<li data-id=\"801c6ac5-617a-4021-94e9-3d94c0dfbe7b\" data-region=\"CSO\" >CSO <span>(4597)</span></li>\n\t\t\t\t\t<li data-id=\"46b456c0-583f-477a-8d2e-bbae8efa1e06\" data-region=\"Moscow\" >Москва <span>(523)</span></li>\n\t\t\t\t\t<li data-id=\"699e9748-6155-453c-92d9-fc1e2018ed67\" data-region=\"North-West\" className=\"active\">Северо-Запад <span>(367)</span></li>\n\t\t\t\t\t<li data-id=\"46eb1c7d-37c1-4f7b-af5b-07b423c3c9a9\" data-region=\"Center\">Центр <span></span></li>\n\t\t\t\t\t<li data-id=\"1021ac87-0a38-4f2f-96bd-43987d130463\" data-region=\"South\">Юг <span></span></li>\n\t\t\t\t\t<li data-id=\"8e672c2b-d67a-4b41-acb7-37bea373272d\" data-region=\"Ural\">Урал <span></span></li>\n\t\t\t\t\t<li data-id=\"688f7558-5d49-45ce-a8e8-e4fa6fc118a6\" data-region=\"SFE\">Сибирь и Дальний Восток <span></span></li>\n\t\t\t\t\t<li data-id=\"f2f52e38-3403-40d3-9140-1f4c55e0408c\" data-region=\"Multon\">Мултон <span></span></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t</Fragment>\n\t\t); \n\t}\n}\n\nexport default Regions;\n","import React, { PureComponent, Fragment } from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport \"./textarea.css\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker, Emoji } from \"emoji-mart\";\nimport { FaRegSmile } from \"react-icons/fa\";\n\nclass Textarea extends PureComponent {\n  constructor() {\n    super();\n    this.contentEditable = React.createRef();\n    this.state = {\n      pickerShow: false\n    };\n  }\n  handleChange = e => {\n    const { onChange, name } = this.props;\n    onChange(name, e.target.value);\n  };\n\n  addEmoji = e => {\n    const { onChange, name } = this.props;\n    let test = (\n      <span\n        contentEditable={false}\n        dangerouslySetInnerHTML={{\n          __html: Emoji({\n            html: true,\n            emoji: e.id,\n            size: 18\n          })\n        }}\n      ></span>\n    );\n    this.contentEditable.current.focus();\n    pasteHtmlAtCaret(\n      \"&nbsp;\" + test.props.dangerouslySetInnerHTML.__html + \"&nbsp;\"\n    );\n    const value = this.contentEditable.current.innerHTML;\n    onChange(name, value);\n  };\n  handleMouseEnter = e => {\n    this.setState({ pickerShow: true });\n  };\n  handleMouseLeave = e => {\n    this.setState({ pickerShow: false });\n  };\n  render() {\n    const { value } = this.props;\n    const { pickerShow } = this.state;\n    return (\n      <Fragment>\n        <div className=\"textAreaContainer\">\n          <div\n            className=\"pickerContainer\"\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n          >\n            <FaRegSmile\n              className=\"emojiPicker\"\n            />\n            {pickerShow && <Picker set=\"emojione\" onSelect={this.addEmoji} />}\n          </div>\n          <ContentEditable\n            innerRef={this.contentEditable}\n            html={value}\n            onChange={this.handleChange}\n            className=\"textArea\"\n          />\n          {/* <textarea value={value} onChange={this.handleChange}>\n            \n          </textarea> */}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nfunction pasteHtmlAtCaret(html) {\n  var sel, range;\n  if (window.getSelection) {\n    // IE9 and non-IE\n    sel = window.getSelection();\n    if (sel.getRangeAt && sel.rangeCount) {\n      range = sel.getRangeAt(0);\n      range.deleteContents();\n\n      // Range.createContextualFragment() would be useful here but is\n      // non-standard and not supported in all browsers (IE9, for one)\n      var el = document.createElement(\"div\");\n      el.innerHTML = html;\n      var frag = document.createDocumentFragment(),\n        node,\n        lastNode;\n      while ((node = el.firstChild)) {\n        lastNode = frag.appendChild(node);\n      }\n      range.insertNode(frag);\n\n      // Preserve the selection\n      if (lastNode) {\n        range = range.cloneRange();\n        range.setStartAfter(lastNode);\n        range.collapse(true);\n        sel.removeAllRanges();\n        sel.addRange(range);\n      }\n    }\n  } else if (document.selection && document.selection.type != \"Control\") {\n    // IE < 9\n    document.selection.createRange().pasteHTML(html);\n  }\n}\n\nexport default Textarea;\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./tenInput.css\";\nimport { maxBonusToSend } from \"../../constants/config\";\n\nclass TenInput extends PureComponent {\n  handleChange = e => {\n    const { onChange, name } = this.props; \n    onChange(name, e.target.value);\n  };\n  handleMinus = () => {\n    let { value } = this.props;\n    const { count } = this.props;\n    value = parseInt(value);\n    if (!value) value = 1;\n    value -= 1;\n    if (value < 1) value = 1;\n    if (count === maxBonusToSend) value = 0;\n    const { onChange, name } = this.props;\n    onChange(name, value);\n  };\n  handlePlus = () => {\n    let { count, value } = this.props;\n    value = parseInt(value);\n    if (!value) value = 1;\n    value += 1;\n    if (value > maxBonusToSend - count) value = maxBonusToSend - count;\n    const { onChange, name } = this.props;\n    onChange(name, value);\n  };\n  render() {\n    let { count, value } = this.props;\n    if (count === maxBonusToSend) value = 0;\n    return (\n      <Fragment>\n        <div className=\"tenInput\">\n          <button className=\"minus btn-counter\" onClick={this.handleMinus}>\n            -\n          </button>\n          <input value={value} onChange={this.handleChange}></input>\n          <button className=\"plus btn-counter\" onClick={this.handlePlus}>\n            +\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    count: state.modules.thanks.count\n  }),\n  {}\n)(TenInput);\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PeoplePicker } from \"../../modules/peoplePicker\";\nimport { Select } from \"../../modules/select\";\nimport Textarea from \"../textarea\";\nimport TenInput from \"../tenInput\";\nimport { addThankYou, addThankYouIdle } from \"../../actions\";\nimport { maxBonusToSend } from \"../../constants/config\";\n\nimport \"./form.css\";\n\nclass Form extends PureComponent {\n  state = {\n    disabled: true,\n    form: {\n      AppTo: null,\n      AppText: \"\",\n      AppScores: 1,\n      AppFrom: null,\n      AppNomination: null,\n      Title: \"\"\n    }\n  };\n  static getDerivedStateFromProps(props, state) {\n    const { users, count } = props;\n    let { form } = state;\n    if (users.from) form = { ...form, AppFrom: users.from.id };\n    if (users.to) form = { ...form, AppTo: users.to.id };\n    if (maxBonusToSend == count) form = { ...form, AppScores: 0 };\n    return { form };\n  }\n  componentDidUpdate() {\n    const { addThankYouStatus, addThankYouIdle } = this.props;\n    if (addThankYouStatus === \"SUCCESS\") {\n      const form = {\n        AppTo: null,\n        AppText: \"\",\n        AppScores: 1,\n        AppFrom: null,\n        AppNomination: null,\n        Title: \"\"\n      };\n      this.setState({ form, disabled: true });\n      addThankYouIdle();\n    }\n  }\n  handleChange = (name, value) => {\n    let { form } = this.state;\n    const { users } = this.props;\n    let { disabled } = this.state;\n    if (\n      users.from &&\n      users.to &&\n      form.AppText.length > 30 &&\n      form.AppScores > 0 &&\n      form.AppNomination\n    ) {\n      disabled = false;\n    } else {\n      disabled = true;\n    }\n    form = { ...form, [name]: value };\n    this.setState({ form, disabled });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    let { form } = this.state;\n    const { addThankYou, users } = this.props;\n    if (users.from && users.to)\n      form = { ...form, Title: users.from.title + \" to \" + users.to.title };\n    form.AppNomination = form.AppNomination.value;\n    addThankYou(form);\n  };\n  render() {\n    const { form, disabled } = this.state;\n    const { AppScores } = form;\n    return (\n      <Fragment>\n        <Select\n          name=\"AppNomination\"\n          listTitle=\"AppNominations\"\n          onChange={this.handleChange}\n          value={form.AppNomination}\n        />\n        <PeoplePicker value={form.AppTo} />\n        <Textarea\n          name=\"AppText\"\n          onChange={this.handleChange}\n          value={form.AppText}\n        />\n        <div className=\"flex-spb-c\">\n          <TenInput\n            name=\"AppScores\"\n            onChange={this.handleChange}\n            value={form.AppScores}\n          />\n          <button\n            id=\"thanks-submit\"\n            disabled={disabled}\n            onClick={this.handleSubmit}\n          >\n            Отправить\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    users: state.modules.users.list,\n    count: state.modules.thanks.count,\n    addThankYouStatus: state.status.addThankYouStatus\n  }),\n  { addThankYou, addThankYouIdle }\n)(Form);\n","import React, { PureComponent, Fragment } from \"react\";\n\nclass Footer extends PureComponent {\n    state = {  }\n    render() { \n        return ( \n            \n            <Fragment>\n                <footer>\n                    <div className=\"container\">&copy; 2019 &laquo;Кока-Кола ЭйчБиСи Евразия&raquo;</div>\n                </footer>\n            </Fragment>);\n    }\n}   \n \nexport default Footer;","import React, { PureComponent, Fragment } from \"react\";\nclass ThanksHeader extends PureComponent {\n  state = {};\n  render() {\n    return(\n      <Fragment>\n        <header>\n          <div className=\"container\">\n            <a className=\"logo\" href=\"/\"></a>\n          </div>\n        </header>\n      </Fragment>\n    ); \n  }\n}\n\nexport default ThanksHeader;\n","import React, { Component, Fragment } from \"react\";\nimport history from \"./history\";\nimport { connect } from \"react-redux\";\nimport { Default } from \"./pages\";\nimport Form from \"./components/form\";\nimport Footer from \"./components/footer\";\nimport ThanksHeader from \"./components/header\";\nimport { PersonalCard } from \"./modules/personalCard\";\nimport { UserInfo } from \"./modules/userInfo\";\nimport \"./App.css\";\nimport { getUserListId } from \"./modules/getUserListId/actions\";\n\nclass App extends Component {\n  componentDidMount() {\n    const { getUserListId } = this.props;\n    getUserListId();\n  }\n  render() {\n    const { userId } = this.props;\n    return (\n      <Fragment>\n        <UserInfo />\n        <section id=\"thanks-top\">\n          <ThanksHeader history={history} />\n          <div id=\"thanks-form\">\n            <div className=\"container\">\n              <div className=\"flex-spb-t\">\n                <div className=\"col-6 first\">\n                  <h1>\n                    Отправь благодарность коллеге\n                    <br />\n                    <span>Скажи спасибо</span>\n                  </h1>\n                  <Form />                  \n                </div>\n                <div className=\"col-6\">\n                  <div id=\"my\">\n                    <div className=\"head-green angle-right\">\n                      <h4>ЛИЧНЫЙ КАБИНЕТ</h4>\n                    </div>\n                    {userId && <PersonalCard userId={userId} />}\n                  </div>\n                </div>  \n              </div> \n            </div>\n          </div>\n        </section> \n\n        <Default />\n        <Footer />\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    userId: state.modules.usersInfo.currentUser.userId\n  }),\n  { getUserListId }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createStore from \"./store\";\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n      <App /> \n    </Provider>, \n    document.getElementById(\"root\")\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}