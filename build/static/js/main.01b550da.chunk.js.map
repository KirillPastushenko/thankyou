{"version":3,"sources":["images/wa.svg","api/jsom/jsom.js","api/requests/getUserRequest.js","constants/columns.js","constants/config.js","api/requests/getPhoneBookRequest.js","api/jsom/helpers.js","api/requests/searchPhoneBookRequest.js","actions/user.js","actions/phonebook.js","sagas/user.js","sagas/phonebook.js","sagas/index.js","reducers/user.js","reducers/phonebook.js","reducers/status.js","reducers/search.js","reducers/index.js","store.js","history.js","selectors/selectPhoneBook.js","selectors/selectPhoneBookStatus.js","components/table/table.js","components/card/card.js","components/grid/grid.js","components/paginator/paginator.js","pages/default/default.js","components/contactList/contactList.js","pages/contact/contact.js","components/search/search.js","components/header/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","JSOM","url","context","SP","window","Microsoft","web","ClientContext","get_current","get_web","user","get_currentUser","publicFunctions","lists","listObj","setListObj","listName","listId","get","listTitleOrId","Promise","resolve","reject","targetList","getList","fields","get_fields","load","executeQueryAsync","get_title","get_id","toString","sender","args","console","log","get_message","get_stackTrace","getItems","caml","position","viewFields","query","camlQuery","CamlQuery","set_listItemCollectionPosition","set_viewXml","targetListItems","fieldsText","l","length","i","map","value","addItems","arr","listItemInfo","ListItemCreationInformation","arrValue","addItem","Object","keys","fieldName","set_item","update","updateItems","getItemById","ID","deleteItems","deleteObject","getListTitle","terms","termSetIdArr","termStore","Taxonomy","TaxonomySession","getTaxonomySession","get_termStores","getById","termStoreId","termsList","termSet","getTermSet","getAllTerms","files","createDocFolder","libName","folderName","folder","getFolderByServerRelativeUrl","oList","get_lists","getByTitle","itemCreateInfo","set_underlyingObjectType","FileSystemObjectType","set_leafName","item","file","listItem","obj","getFileByServerRelativeUrl","filePath","get_listItemAllFields","users","getCurrent","usersArr","self","requestSearchUserArr","requestUserArr","userId","indexOf","push","collListItemArr","userID","currentUser","ensureUser","replace","acitem","check","userFullInfo","then","data","groups","groupsList","groupUserEnumerator","getEnumerator","moveNext","groupUser","name","id","userArr","collListItem","userInfoList","get_siteUserInfoList","get_groups","search","people","key","searchFields","keywordQuery","SharePoint","Client","Search","Query","KeywordQuery","set_queryText","properties","get_selectProperties","add","set_sourceId","results","SearchExecutor","executeQuery","mentionSearch","keyText","trim","set_startRow","set_trimDuplicates","set_rowLimit","text","contentTypeId","propertiesArr","quantity","startRow","orderByFieldNames","pathArr","sourceid","ctypeText","ctypeLength","index","pathText","pathLength","propertie","set_enableSorting","set_enablePhonetic","set_culture","sort","get_sortList","asc","testListTitleId","split","getUserRequest","payload","userData","get_data","user2","get_fieldValues","groupsArr","title","current","columns","width","dataIndex","searchKey","fixed","render","phone","getURI","href","formatNational","mail","date","format","urlDefault","jsom","helpers","getRandomInt","min","max","Math","floor","random","replaceSym","cutScript","str","re","decodeHtml","html","txt","document","createElement","innerHTML","strip","tmp","textContent","innerText","replaceDIV","replaceFont","replaceStyle","replaceToBR","replaceBRtoN","replaceDIVtoN","removeArr","from","to","rest","slice","apply","linkify","inputText","replacePattern1","replacePattern2","replacePattern3","getAllParams","params","location","aItKey","nKeyId","aCouples","substr","decodeURIComponent","getURLParameter","retUrl","decodeURI","RegExp","exec","nameOfMonth","month","ru","monthsName","enumerator","type","listItemEnumerator","listArr","oListItem","get_objectData","get_label","get_termGuid","Title","get_name","URL","get_serverRelativeUrl","array","$a","$b","a","b","parseInt","Date","wordEnd","num","words","abs","wordEndEn","nextPage","nextPagingInfo","get_listItemCollectionPosition","get_pagingInfo","ListItemCollectionPosition","set_pagingInfo","prevPage","prevPagingInfo","itemAt","column","getPhoneBookRequest","action","CamlBuilder","View","Scope","ViewScope","RecursiveAll","RowLimit","Where","LookupField","Id","EqualTo","OrderByDesc","ToString","count","get_itemCount","result","searchPhoneBookRequest","request","m_value","ResultTables","ResultRows","TotalRows","createActions","getUser","getUserSuccess","getUserFailure","getPhoneBook","getPhoneBookSuccess","getPhoneBookFailure","searchPhoneBook","searchPhoneBookSuccess","searchPhoneBookFailure","getUserSaga","userWatcher","call","response","put","takeEvery","getPhoneBookSaga","phoneBookWatcher","fork","handleActions","state","combineReducers","items","itemsCount","next","prev","phonebook","phoneBookStatus","searchPhoneBookStatus","userStatus","status","createAppStore","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","run","sagas","createBrowserHistory","forceRefresh","selectPhoneBook","createSelector","Rank","phoneBookForTable","phoneBookObj","phoneNumber","parsePhoneNumberFromString","ListItemID","searchConvertor","listConvertor","selectPhoneBookStatus","searchStatus","getStatus","phoneBookActions","PhoneTable","searchText","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","onClick","icon","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","highlightStyle","backgroundColor","searchWords","props","autoEscape","textToHighlight","this","loading","handleView","newColumns","dataSource","scroll","x","onRow","rowIndex","event","PureComponent","connect","Meta","Card","PhoneCard","handleEdit","span","className","margin","actions","description","JobTitle1","CompanyName","PhoneMain","PhoneMobile","EmailMain","PhoneGrid","justify","Paginator","paginationRender","originalElement","currentPage","pagination","total","itemsTotal","pageSize","itemRender","Content","Layout","TabPane","Tabs","userActions","Default","history","defaultActiveKey","innerWidth","Item","tab","ContactList","bordered","label","rel","src","wa","countryCallingCode","nationalNumber","Contact","URLSearchParams","Input","PhoneSearch","handleChange","onSearch","allowClear","PhoneHeader","Header","Footer","App","exact","path","component","Component","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01b550da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wa.a8f1e7b7.svg\";","import { termStoreId } from \"../../constants\";\r\nexport const JSOM = function(url) {\r\n  const SP = window.SP;\r\n  const Microsoft = window.Microsoft;\r\n  let context;\r\n  if (url) {\r\n    context = new SP.ClientContext(url);\r\n  } else {\r\n    context = new SP.ClientContext.get_current();\r\n  }\r\n  const web = context.get_web();\r\n  const user = web.get_currentUser();\r\n\r\n  const publicFunctions = {\r\n    lists: {\r\n      listObj: {},\r\n      setListObj: (listName, listId) => {\r\n        if (listName && listId)\r\n          publicFunctions.lists.listObj[listName] = listId;\r\n      },\r\n      get: listTitleOrId => {\r\n        return new Promise((resolve, reject) => {\r\n          const targetList = getList(listTitleOrId);\r\n          const fields = targetList.get_fields();\r\n          context.load(targetList);\r\n          context.load(fields);\r\n          context.executeQueryAsync(\r\n            () => {\r\n              if (targetList) {\r\n                publicFunctions.lists.setListObj(\r\n                  targetList.get_title(),\r\n                  targetList.get_id().toString()\r\n                );\r\n              }\r\n              resolve({ targetList, fields });\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      },\r\n      getItems: (listTitleOrId, caml, position, viewFields) => {\r\n        return new Promise((resolve, reject) => {\r\n          const targetList = getList(listTitleOrId);\r\n          let query;\r\n          if (caml) {\r\n            query = caml;\r\n          } else {\r\n            query =\r\n              \"<View Scope='RecursiveAll'><Query><OrderBy><FieldRef Name='ID' Ascending='FALSE'></FieldRef></OrderBy></Query></View>\";\r\n          }\r\n          const camlQuery = new SP.CamlQuery();\r\n          camlQuery.set_listItemCollectionPosition(position);\r\n          camlQuery.set_viewXml(query);\r\n          const targetListItems = targetList.getItems(camlQuery);\r\n          context.load(targetList);\r\n          let fieldsText = \"\";\r\n          if (viewFields) {\r\n            const l = viewFields.length;\r\n            let i = 1;\r\n            viewFields.map(value => {\r\n              fieldsText += value + (i < l ? \", \" : \"\");\r\n              i++;\r\n            });\r\n            context.load(targetListItems, \"Include(\" + fieldsText + \")\");\r\n          } else {\r\n            context.load(targetListItems);\r\n          }\r\n          context.executeQueryAsync(\r\n            () => {\r\n              if (targetList) {\r\n                publicFunctions.lists.setListObj(\r\n                  targetList.get_title(),\r\n                  targetList.get_id().toString()\r\n                );\r\n              }\r\n              resolve({targetListItems, targetList});\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      },\r\n      addItems: (listTitleOrId, arr) => {\r\n        return new Promise((resolve, reject) => {\r\n          const targetList = getList(listTitleOrId);\r\n          const listItemInfo = new SP.ListItemCreationInformation();\r\n          let targetListItems;\r\n          arr.map(arrValue => {\r\n            targetListItems = targetList.addItem(listItemInfo);\r\n            Object.keys(arrValue).map(fieldName => {\r\n              if (fieldName !== \"ID\") {\r\n                targetListItems.set_item(fieldName, arrValue[fieldName]);\r\n              }\r\n            });\r\n            targetListItems.update();\r\n          });\r\n          context.executeQueryAsync(\r\n            () => {\r\n              resolve(targetListItems);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      },\r\n      updateItems: (listTitleOrId, arr) => {\r\n        return new Promise((resolve, reject) => {\r\n          var targetList = getList(listTitleOrId);\r\n          let targetListItems;\r\n          arr.map(arrValue => {\r\n            targetListItems = targetList.getItemById(arrValue.ID);\r\n            Object.keys(arrValue).map(fieldName => {\r\n              if (fieldName !== \"ID\") {\r\n                targetListItems.set_item(fieldName, arrValue[fieldName]);\r\n              }\r\n            });\r\n            targetListItems.update();\r\n          });\r\n          context.executeQueryAsync(\r\n            () => {\r\n              if (targetList) {\r\n                publicFunctions.lists.setListObj(\r\n                  targetList.get_title(),\r\n                  targetList.get_id().toString()\r\n                );\r\n              }\r\n              resolve(targetListItems);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      },\r\n      deleteItems: (listTitleOrId, arr) => {\r\n        return new Promise((resolve, reject) => {\r\n          var targetList = getList(listTitleOrId);\r\n          var targetListItems;\r\n          arr.map(arrValue => {\r\n            targetListItems = targetList.getItemById(arrValue.ID);\r\n            targetListItems.deleteObject();\r\n          });\r\n          context.executeQueryAsync(\r\n            () => {\r\n              if (targetList) {\r\n                publicFunctions.lists.setListObj(\r\n                  targetList.get_title(),\r\n                  targetList.get_id().toString()\r\n                );\r\n              }\r\n              resolve(targetListItems);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      },\r\n      getListTitle: listId => {\r\n        return new Promise((resolve, reject) => {\r\n          var targetList = getList(listId);\r\n          context.load(targetList);\r\n          context.executeQueryAsync(\r\n            () => {\r\n              if (targetList) {\r\n                publicFunctions.lists.setListObj(\r\n                  targetList.get_title(),\r\n                  targetList.get_id().toString()\r\n                );\r\n              }\r\n              resolve(targetList);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      }\r\n    },\r\n    terms: {\r\n      get: termSetIdArr => {\r\n        return new Promise((resolve, reject) => {\r\n          var session = SP.Taxonomy.TaxonomySession.getTaxonomySession(context);\r\n          var termStore = session.get_termStores().getById(termStoreId);\r\n          var termsList = [];\r\n          var termSet = [];\r\n          var i = 0;\r\n          termSetIdArr.map(value => {\r\n            termSet[i] = termStore.getTermSet(value);\r\n            termsList[i] = termSet[i].getAllTerms();\r\n            context.load(termSet[i]);\r\n            context.load(\r\n              termsList[i],\r\n              \"Include(IsRoot, Labels, TermsCount, CustomSortOrder, Id, Name, PathOfTerm, TermSet.Name, LocalCustomProperties, IsDeprecated)\"\r\n            );\r\n            i++;\r\n          });\r\n          context.executeQueryAsync(\r\n            () => {\r\n              resolve({ termsList, termSet });\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      }\r\n    },\r\n    files: {\r\n      createDocFolder: function(libName, folderName) {\r\n        return new Promise((resolve, reject) => {\r\n          var folder = context\r\n            .get_web()\r\n            .getFolderByServerRelativeUrl(\"/\" + libName + \"/\" + folderName);\r\n          context.load(folder, \"Exists\", \"Name\");\r\n          context.executeQueryAsync(\r\n            () => {\r\n              resolve();\r\n              console.log(\"Папка уже существует\");\r\n            },\r\n            () => {\r\n              console.log(\"Папки нет, создаем ее\");\r\n              var oList = context\r\n                .get_web()\r\n                .get_lists()\r\n                .getByTitle(libName);\r\n              var itemCreateInfo = new SP.ListItemCreationInformation();\r\n              itemCreateInfo.set_underlyingObjectType(\r\n                SP.FileSystemObjectType.folder\r\n              );\r\n              itemCreateInfo.set_leafName(folderName);\r\n              var item = oList.addItem(itemCreateInfo);\r\n              item.set_item(\"ContentTypeId\", \"0x0120\");\r\n              item.set_item(\"Title\", folderName);\r\n              item.update();\r\n              context.load(item);\r\n              context.executeQueryAsync(\r\n                function() {\r\n                  resolve();\r\n                },\r\n                function() {\r\n                  reject();\r\n                }\r\n              );\r\n            }\r\n          );\r\n        });\r\n      },\r\n      update: arr => {\r\n        return new Promise((resolve, reject) => {\r\n          let file;\r\n          let listItem;\r\n          arr.map(obj => {\r\n            file = web.getFileByServerRelativeUrl(obj.filePath);\r\n            listItem = file.get_listItemAllFields();\r\n            Object.keys(obj).map(fieldName => {\r\n              if (\r\n                fieldName !== \"\" &&\r\n                obj[fieldName] &&\r\n                fieldName !== \"filePath\"\r\n              ) {\r\n                listItem.set_item(fieldName, obj[fieldName]);\r\n              }\r\n            });\r\n            listItem.update();\r\n          });\r\n          context.executeQueryAsync(\r\n            () => {\r\n              resolve(listItem);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      }\r\n    },\r\n    users: {\r\n      getCurrent: () => {\r\n        return new Promise((resolve, reject) => {\r\n          context.load(user);\r\n          context.executeQueryAsync(\r\n            () => {\r\n              resolve(user);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      },\r\n      get: usersArr => {\r\n        const self = publicFunctions.users;\r\n        return new Promise((resolve, reject) => {\r\n          var requestSearchUserArr = [];\r\n          var requestUserArr = [];\r\n          usersArr.map(userId => {\r\n            if (userId) {\r\n              if (typeof userId == \"string\" && userId.indexOf(\"_\") > -1) {\r\n                requestSearchUserArr.push(userId);\r\n              } else {\r\n                requestUserArr.push(userId);\r\n              }\r\n            }\r\n          });\r\n          if (requestSearchUserArr.length > 0) {\r\n            var collListItemArr = [];\r\n            requestSearchUserArr.map(userID => {\r\n              var currentUser = web.ensureUser(userID.replace(/_/, \"\\\\\"));\r\n              collListItemArr.push(currentUser);\r\n              context.load(currentUser);\r\n            });\r\n            context.executeQueryAsync(\r\n              () => {\r\n                collListItemArr.map(acitem => {\r\n                  var check = true;\r\n                  if (requestUserArr.indexOf(acitem.get_id()) !== -1) {\r\n                    check = false;\r\n                  }\r\n                  if (check) {\r\n                    requestUserArr.push(acitem.get_id());\r\n                  }\r\n                });\r\n                self.userFullInfo(requestUserArr).then(data => {\r\n                  const groups = groupsList(data.groups);\r\n                  resolve(data, groups);\r\n                });\r\n              },\r\n              (sender, args) => {\r\n                console.log(sender);\r\n                console.log(\r\n                  \"Request failed. \" +\r\n                    args.get_message() +\r\n                    \"\\n\" +\r\n                    args.get_stackTrace()\r\n                );\r\n                reject(args);\r\n              }\r\n            );\r\n          } else if (requestUserArr.length > 0) {\r\n            self.userFullInfo(requestUserArr).then(data => {\r\n              const groups = groupsList(data.groups);\r\n              resolve(data, groups);\r\n            });\r\n          } else {\r\n            resolve();\r\n          }\r\n          function groupsList(groups) {\r\n            if (groups) {\r\n              var groupUserEnumerator = groups.getEnumerator();\r\n              const groups = [];\r\n              while (groupUserEnumerator.moveNext()) {\r\n                var groupUser = groupUserEnumerator.get_current();\r\n                groups.push({\r\n                  name: groupUser.get_title(),\r\n                  id: groupUser.get_id()\r\n                });\r\n              }\r\n              return groups;\r\n            }\r\n          }\r\n        });\r\n      },\r\n      userFullInfo: userArr => {\r\n        return new Promise((resolve, reject) => {\r\n          var userInfoList = web.get_siteUserInfoList();\r\n          var camlQuery = new SP.CamlQuery();\r\n          var collListItemArr = [];\r\n          var collListItem;\r\n          var groups = user.get_groups();\r\n          userArr.map(userID => {\r\n            camlQuery.set_viewXml(\r\n              \"<View><Query><Where><Eq><FieldRef Name='ID'/><Value Type='Number'>\" +\r\n                userID +\r\n                \"</Value></Eq></Where></Query><RowLimit>1</RowLimit></View>\"\r\n            );\r\n            collListItem = userInfoList.getItems(camlQuery);\r\n            collListItemArr.push(collListItem);\r\n            context.load(collListItem);\r\n          });\r\n          context.load(groups);\r\n          context.executeQueryAsync(\r\n            () => {\r\n              resolve(collListItemArr, groups);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      }\r\n    },\r\n    search: {\r\n      people: (key, searchFields) => {\r\n        return new Promise((resolve, reject) => {\r\n          var keywordQuery = new Microsoft.SharePoint.Client.Search.Query.KeywordQuery(\r\n            context\r\n          );\r\n          keywordQuery.set_queryText(key);\r\n          var properties = keywordQuery.get_selectProperties();\r\n          if (searchFields) {\r\n            searchFields.map(value => {\r\n              properties.add(value);\r\n            });\r\n          }\r\n          keywordQuery.set_sourceId(\"b09a7990-05ea-4af9-81ef-edfab16c4e31\");\r\n          var searchExecutor = new Microsoft.SharePoint.Client.Search.Query.SearchExecutor(\r\n            context\r\n          );\r\n          var results = searchExecutor.executeQuery(keywordQuery);\r\n          context.executeQueryAsync(\r\n            () => {\r\n              resolve(results);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      },\r\n      mentionSearch: function(key) {\r\n        return new Promise((resolve, reject) => {\r\n          var keywordQuery = new Microsoft.SharePoint.Client.Search.Query.KeywordQuery(\r\n            context\r\n          );\r\n          key = key.trim();\r\n          var keyText = key;\r\n          key = \"\";\r\n          // key = \"((\" + key + \") OR \";\r\n          key =\r\n            key +\r\n            \"(LastName:\" +\r\n            keyText +\r\n            \"* OR \" +\r\n            \"FirstName:\" +\r\n            keyText +\r\n            \"*)\";\r\n          // key += \")\";\r\n          // key =\r\n          //   key +\r\n          //   \"(LastName:\" +\r\n          //   keyText +\r\n          //   \"*)\";\r\n          // key += \")\";\r\n          keywordQuery.set_queryText(key);\r\n          var properties = keywordQuery.get_selectProperties();\r\n          properties.add(\"LastName\");\r\n          properties.add(\"FirstName\");\r\n          keywordQuery.set_startRow(0);\r\n          keywordQuery.set_trimDuplicates(true);\r\n          keywordQuery.set_rowLimit(500);\r\n          keywordQuery.set_sourceId(\"b09a7990-05ea-4af9-81ef-edfab16c4e31\");\r\n          var searchExecutor = new Microsoft.SharePoint.Client.Search.Query.SearchExecutor(\r\n            context\r\n          );\r\n          const results = searchExecutor.executeQuery(keywordQuery);\r\n          context.executeQueryAsync(\r\n            () => {\r\n              resolve(results);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      },\r\n      text: function(\r\n        text,\r\n        contentTypeId,\r\n        propertiesArr,\r\n        quantity,\r\n        startRow,\r\n        orderByFieldNames,\r\n        pathArr,\r\n        sourceid\r\n      ) {\r\n        return new Promise((resolve, reject) => {\r\n          var ctypeText = \"\";\r\n          quantity = quantity || 10;\r\n          startRow = startRow || 0;\r\n          if (contentTypeId) {\r\n            var ctypeLength = contentTypeId.length;\r\n            ctypeText += \" AND (\";\r\n            contentTypeId.map((value, index) => {\r\n              ctypeText += \"ContentTypeId:\" + value + \"*\";\r\n              if (index < ctypeLength - 1) {\r\n                ctypeText += \" OR \";\r\n              }\r\n            });\r\n            ctypeText += \")\";\r\n          }\r\n          var pathText = \"\";\r\n          if (pathArr) {\r\n            var pathLength = pathArr.length;\r\n            pathText += \" AND (\";\r\n            pathArr.map((value, index) => {\r\n              pathText += \"Path:\" + value;\r\n              if (index < pathLength - 1) {\r\n                pathText += \" OR \";\r\n              }\r\n            });\r\n            pathText += \")\";\r\n          }\r\n          let key = \"(\" + text + \") \" + pathText + ctypeText;\r\n\r\n          var keywordQuery = new Microsoft.SharePoint.Client.Search.Query.KeywordQuery(\r\n            context\r\n          );\r\n          keywordQuery.set_trimDuplicates(false);\r\n          keywordQuery.set_queryText(key);\r\n          var properties = keywordQuery.get_selectProperties();\r\n          if (propertiesArr) {\r\n            propertiesArr.map(propertie => {\r\n              properties.add([propertie]);\r\n            });\r\n          }\r\n          keywordQuery.set_rowLimit(quantity);\r\n          keywordQuery.set_enableSorting(true);\r\n          keywordQuery.set_startRow(startRow);\r\n          keywordQuery.set_enablePhonetic(true);\r\n          var culture = 1049;\r\n          keywordQuery.set_culture(culture);\r\n          if (sourceid) {\r\n            keywordQuery.set_sourceId(sourceid);\r\n          }\r\n          var sort = keywordQuery.get_sortList();\r\n          if (typeof orderByFieldNames == \"object\") {\r\n            orderByFieldNames.map(value => {\r\n              if (value.asc === true) {\r\n                value.asc = 1;\r\n              } else {\r\n                value.asc = 0;\r\n              }\r\n              sort.add(value.name, value.asc);\r\n            });\r\n          }\r\n          var searchExecutor = new Microsoft.SharePoint.Client.Search.Query.SearchExecutor(\r\n            context\r\n          );\r\n          var results = searchExecutor.executeQuery(keywordQuery);\r\n\r\n          context.executeQueryAsync(\r\n            () => {\r\n              resolve(results);\r\n            },\r\n            (sender, args) => {\r\n              console.log(sender);\r\n              console.log(\r\n                \"Request failed. \" +\r\n                  args.get_message() +\r\n                  \"\\n\" +\r\n                  args.get_stackTrace()\r\n              );\r\n              reject(args);\r\n            }\r\n          );\r\n        });\r\n      }\r\n    }\r\n  };\r\n  function getList(listTitleOrId) {\r\n    var testListTitleId = listTitleOrId.trim().split(\"-\");\r\n    if (\r\n      testListTitleId.length === 5 &&\r\n      testListTitleId[0].length === 8 &&\r\n      testListTitleId[1].length === 4 &&\r\n      testListTitleId[2].length === 4 &&\r\n      testListTitleId[3].length === 4 &&\r\n      testListTitleId[4].length === 12\r\n    ) {\r\n      return web.get_lists().getById(listTitleOrId);\r\n    } else {\r\n      return web.get_lists().getByTitle(listTitleOrId);\r\n    }\r\n  }\r\n  return publicFunctions;\r\n};\r\n","import { JSOM } from \"../jsom\";\n\nconst jsom = JSOM();\nconst { users } = jsom;\nexport const getUserRequest = payload => {\n  return new Promise((resolve, reject) => {\n    users.getCurrent().then(data => {\n      const user = data;\n      window.user = data;\n      const userId = data.get_id();\n      users.get([userId]).then(data => {\n        data = data[0].get_data();\n        const userData = data[0];\n        window.user2 = userData.get_fieldValues();\n        let groups = user.get_groups();\n        groups = groups.get_data();\n        const groupsArr = [];\n        groups.map(item => {\n          groupsArr.push({ id: item.get_id(), title: item.get_title() });\n        });\n        // console.log(\"Groups: \", groups);\n        resolve({ current: userData.get_fieldValues(), groups: groupsArr });\n      });\n    });\n  });\n};\n","import React, { Fragment } from \"react\";\nimport Moment from \"react-moment\";\n\nexport const columns = [\n  {\n    title: \"ФИО\",\n    width: 300,\n    dataIndex: \"Title\",\n    key: \"Title\",\n    searchKey: \"Title\",\n    fixed: \"left\"\n  },\n  {\n    title: \"Пол\",\n    width: 50,\n    dataIndex: \"Sex\",\n    key: \"Sex\",\n    searchKey: \"SexOWSCHCS\"\n  },\n  {\n    title: \"Название организации\",\n    dataIndex: \"CompanyName\",\n    key: \"CompanyName\",\n    searchKey: \"CompanyNameOWSMTXT\",\n    width: 200\n  },\n  {\n    title: \"Тип организации\",\n    dataIndex: \"CompanyType\",\n    key: \"CompanyType\",\n    searchKey: \"CompanyTypeOWSTEXT\",\n    width: 200\n  },\n  {\n    title: \"Фамилия\",\n    dataIndex: \"LastName\",\n    key: \"LastName\",\n    searchKey: \"LastNameOWSTEXT\",\n    width: 200\n  },\n  {\n    title: \"Имя\",\n    dataIndex: \"FirstName1\",\n    key: \"FirstName1\",\n    searchKey: \"FirstName1OWSTEXT\",\n    width: 200\n  },\n  {\n    title: \"Должность/отдел\",\n    dataIndex: \"JobTitle1\",\n    key: \"JobTitle1\",\n    searchKey: \"JobTitle1OWSMTXT\",\n    width: 200\n  },\n  {\n    title: \"Адрес\",\n    dataIndex: \"FullAddress\",\n    key: \"FullAddress\",\n    searchKey: \"FullAddressOWSMTXT\",\n    width: 400\n  },\n  {\n    title: \"Телефон (основной)\",\n    dataIndex: \"PhoneMain\",\n    key: \"PhoneMain\",\n    searchKey: \"PhoneMainOWSTEXT\",\n    width: 200,\n    render: phone => {\n      if (phone && phone.getURI) {\n        return (\n          phone && (\n            <Fragment>\n              <a href={phone.getURI()}>{phone.formatNational()}</a>\n            </Fragment>\n          )\n        );\n      } else {\n        return phone;\n      }\n    }\n  },\n  {\n    title: \"Телефон (мобильный)\",\n    dataIndex: \"PhoneMobile\",\n    key: \"PhoneMobile\",\n    searchKey: \"PhoneMobileOWSTEXT\",\n    width: 200,\n    render: phone => {\n      if (phone && phone.getURI) {\n        return (\n          phone && (\n            <Fragment>\n              <a href={phone.getURI()}>{phone.formatNational()}</a>\n            </Fragment>\n          )\n        );\n      } else {\n        return phone;\n      }\n    }\n  },\n  {\n    title: \"E-mail (основной)\",\n    dataIndex: \"EmailMain\",\n    key: \"EmailMain\",\n    searchKey: \"EmailMainOWSTEXT\",\n    width: 200,\n    render: mail => {\n      return mail && <a href={\"mailto:\" + mail}>{mail}</a>;\n    }\n  },\n  {\n    title: \"Сайт организации\",\n    key: \"CompanySite\",\n    dataIndex: \"CompanySite\",\n    searchKey: \"CompanySiteOWSTEXT\",\n    width: 300\n  },\n  {\n    title: \"ДР\",\n    key: \"BirthDayDate\",\n    dataIndex: \"BirthDayDate\",\n    searchKey: \"BirthDayDateOWSDATE\",\n    width: 200,\n    render: date => {\n      return date && <Moment format=\"DD MMMM\">{date}</Moment>;\n    }\n  },\n  {\n    title: \"Подарок\",\n    key: \"Gift\",\n    dataIndex: \"Gift\",\n    searchKey: \"GiftOWSCHCS\",\n    width: 100\n  }\n];\n","// export const urlDefault = \"/sites/phonebook/PhoneBookApp\";\nexport const urlDefault = \"/teams/rubsbcomms/PhoneBookApp\";\nexport const phoneBookContentTypeId = \"0x0100B68D45ECB8EF0C45B40677AA68ABA047\";\nexport const phoneBookListName = \"PhoneBook\";\nexport const tableRowLimit = 9;","import { JSOM, Helpers } from \"../jsom\";\nimport CamlBuilder from \"camljs\";\nimport { columns } from \"../../constants/columns\";\nimport { phoneBookListName, tableRowLimit } from \"../../constants/config\";\nconst jsom = JSOM();\nconst helpers = Helpers();\nconst { lists } = jsom;\n\nlet viewFields = [];\ncolumns.map(column => {\n  viewFields = [...viewFields, column.key];\n});\nviewFields = [...viewFields, \"ID\", \"Created\"];\nconst sortField = \"ID\";\nconst rowLimit = tableRowLimit;\n\nexport const getPhoneBookRequest = action => {\n  const { payload } = action;\n  let ID, position;\n  if (payload) {\n    ID = payload.ID;\n    position = payload.position;\n  }\n  const camlBuilder = new CamlBuilder();\n  let caml = camlBuilder\n    .View(viewFields)\n    .Scope(CamlBuilder.ViewScope.RecursiveAll)\n    .RowLimit(rowLimit)\n    .Query();\n  if (ID) {\n    caml = caml\n      .Where()\n      .LookupField(\"ID\")\n      .Id()\n      .EqualTo(ID);\n  }\n  caml = caml.OrderByDesc(sortField).ToString();\n  return new Promise((resolve, reject) => {\n    lists.getItems(phoneBookListName, caml, position).then(data => {\n      const { targetList, targetListItems } = data;\n      const nextPage = helpers.nextPage(targetListItems);\n      const prevPage = helpers.prevPage(targetListItems);\n      const count = targetList.get_itemCount();\n      const result = helpers.enumerator(targetListItems);\n      resolve({ result, count, nextPage, prevPage });\n    });\n  });\n};\n","export const Helpers = function() {\r\n  var publicFunctions = {\r\n    getRandomInt: function(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    },\r\n    replaceSym: function(value) {\r\n      value = value.replace(/[\"]/g, \"&#034;\");\r\n      value = value.replace(/[“]/g, \"&#034;\");\r\n      value = value.replace(/[”]/g, \"&#034;\");\r\n      value = value.replace(/[—]/g, \"&mdash;\");\r\n      value = value.replace(/[–]/g, \"&ndash;\");\r\n      value = value.replace(/[’]/g, \"&#039;\");\r\n      value = value.replace(/[•]/g, \"&bull;\");\r\n      value = value.replace(/[＆]/g, \"&\");\r\n      value = value.replace(/[']/g, \"&#039;\");\r\n      value = value.replace(/[\\\\]/g, \"&#092;\");\r\n      var re = /[\\0-\\x1F\\x7F-\\x9F\\xAD\\u0378\\u0379\\u037F-\\u0383\\u038B\\u038D\\u03A2\\u0528-\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B-\\u058E\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u0605\\u061C\\u061D\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08A1\\u08AD-\\u08E3\\u08FF\\u0978\\u0980\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0C00\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C34\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5A-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C81\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D01\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5F\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F5-\\u13FF\\u169D-\\u169F\\u16F1-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191D-\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7-\\u1CFF\\u1DE7-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BB-\\u20CF\\u20F1-\\u20FF\\u218A-\\u218F\\u23F4-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2700\\u2B4D-\\u2B4F\\u2B5A-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E3C-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FCD-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA698-\\uA69E\\uA6F8-\\uA6FF\\uA78F\\uA794-\\uA79F\\uA7AB-\\uA7F7\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FC-\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9E0-\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAA7C-\\uAA7F\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F-\\uABBF\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE27-\\uFE2F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF]/g;\r\n      return value.replace(re, \"\");\r\n    },\r\n    cutScript: function(str) {\r\n      var re = /(<script\\b[^>]*>)[^]*?(<\\/script>)/g;\r\n      str = str.replace(re, \"\");\r\n      var re = /(&lt;script\\b[^>]*&gt;)[^]*?(&lt;\\/script&gt;)/g;\r\n      str = str.replace(re, \"\");\r\n      return str;\r\n    },\r\n    decodeHtml: function(html) {\r\n      var txt = document.createElement(\"textarea\");\r\n      txt.innerHTML = html;\r\n      return txt.value;\r\n    },\r\n    strip: function(html) {\r\n      var tmp = document.createElement(\"DIV\");\r\n      tmp.innerHTML = html;\r\n      return tmp.textContent || tmp.innerText || \"\";\r\n    },\r\n    replaceDIV: function(str) {\r\n      str = str.replace(/<\\/div>/gi, \"\\n\");\r\n      str = str.replace(/<div[^>]*>/gi, \"\");\r\n      return str;\r\n    },\r\n    replaceFont: function(str) {\r\n      str = str.replace(/<\\/font>/gi, \"\");\r\n      str = str.replace(/<font[^>]*>/gi, \"\");\r\n      return str;\r\n    },\r\n    replaceStyle: function(str) {\r\n      str = str.replace(/style=[\"'][^\"']*[\"']/gi, \"\");\r\n      return str;\r\n    },\r\n    replaceToBR: function(str) {\r\n      str = str.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br />\");\r\n      return str;\r\n    },\r\n    replaceBRtoN: function(str) {\r\n      str = str.replace(/<br[^>]*>/gi, \"\\n\");\r\n      return str;\r\n    },\r\n    replaceDIVtoN: function(str) {\r\n      str = str.replace(/<\\/div>/gi, \"\\n\");\r\n      str = str.replace(/<div[^>]*>/gi, \"\");\r\n      return str;\r\n    },\r\n    removeArr: function(arr, from, to) {\r\n      var rest = arr.slice((to || from) + 1 || arr.length);\r\n      arr.length = from < 0 ? arr.length + from : from;\r\n      return arr.push.apply(arr, rest);\r\n    },\r\n    linkify: function(inputText) {\r\n      var replacedText, replacePattern1, replacePattern2, replacePattern3;\r\n\r\n      //URLs starting with http://, https://, or ftp://\r\n      replacePattern1 = /(( |>)\\b(https?|ftp):\\/\\/[-A-Z0-9А-Я+&@#\\/%?=~_|!:,.;]*[-A-Z0-9А-Я+&@#\\/%=~_|])/gim;\r\n      replacedText = inputText.replace(replacePattern1, '<a href=\"$1\">$1</a>');\r\n\r\n      //URLs starting with \"www.\" (without // before it, or it'd re-link the ones done above).\r\n      replacePattern2 = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\r\n      replacedText = replacedText.replace(\r\n        replacePattern2,\r\n        '$1<a href=\"http://$2\">$2</a>'\r\n      );\r\n\r\n      //Change email addresses to mailto:: links.\r\n      replacePattern3 = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\r\n      replacedText = replacedText.replace(\r\n        replacePattern3,\r\n        '<a href=\"mailto:$1\">$1</a>'\r\n      );\r\n\r\n      return replacedText;\r\n    },\r\n    getAllParams: function() {\r\n      const params = {};\r\n      if (window.location.search.length > 1) {\r\n        for (\r\n          var aItKey,\r\n            nKeyId = 0,\r\n            aCouples = window.location.search.substr(1).split(\"&\");\r\n          nKeyId < aCouples.length;\r\n          nKeyId++\r\n        ) {\r\n          aItKey = aCouples[nKeyId].split(\"=\");\r\n          params[decodeURIComponent(aItKey[0])] =\r\n            aItKey.length > 1 ? decodeURIComponent(aItKey[1]) : \"\";\r\n        }\r\n      }\r\n      return params;\r\n    },\r\n    getURLParameter: function(name) {\r\n      var retUrl = decodeURI(\r\n        (RegExp(name + \"=\" + \"(.+?)(&|$)\").exec(window.location.search) || [\r\n          ,\r\n          null\r\n        ])[1]\r\n      );\r\n      if (retUrl === \"null\") {\r\n        retUrl = null;\r\n      }\r\n      return retUrl;\r\n    },\r\n    nameOfMonth: function(month, ru) {\r\n      var monthsName = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n      ];\r\n      if (ru)\r\n        monthsName = [\r\n          \"января\",\r\n          \"февраля\",\r\n          \"марта\",\r\n          \"апреля\",\r\n          \"мая\",\r\n          \"июня\",\r\n          \"июля\",\r\n          \"августа\",\r\n          \"сентября\",\r\n          \"октября\",\r\n          \"ноября\",\r\n          \"декабря\"\r\n        ];\r\n      return monthsName[month];\r\n    },\r\n    enumerator: (arr, type) => {\r\n      var listItemEnumerator = arr.getEnumerator();\r\n      var listArr = [];\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n        if (type === \"terms\") {\r\n          listArr.push(oListItem.get_objectData());\r\n        } else if (type === \"termsList\") {\r\n          listArr.push({\r\n            name: oListItem.get_label(),\r\n            id: oListItem.get_termGuid()\r\n          });\r\n        } else if (type == \"files\") {\r\n          listArr.push({\r\n            Title: oListItem.get_name(),\r\n            ID: oListItem.get_id().toString(),\r\n            URL: oListItem.get_serverRelativeUrl()\r\n          });\r\n        } else if (type == \"all\") {\r\n          listArr.push(oListItem);\r\n        } else {\r\n          listArr.push(oListItem.get_fieldValues());\r\n        }\r\n      }\r\n      return listArr;\r\n    },\r\n    sort: function(array, key, asc, type) {\r\n      var $a, $b;\r\n      if (asc) {\r\n        asc = 1;\r\n      } else {\r\n        asc = -1;\r\n      }\r\n      array = array.sort(function(a, b) {\r\n        if (type == \"int\") {\r\n          $a = parseInt(a[key]);\r\n          $b = parseInt(b[key]);\r\n        } else if (type == \"date\") {\r\n          $a = new Date(a[key]);\r\n          $b = new Date(b[key]);\r\n        } else {\r\n          $a = a[key];\r\n          $b = b[key];\r\n        }\r\n        if ($a > $b) {\r\n          return 1 * asc;\r\n        } else if ($a < $b) {\r\n          return -1 * asc;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n      return array;\r\n    },\r\n    wordEnd: function(num, words) {\r\n      return words[\r\n        ((num = Math.abs(num % 100)) > 10 && num < 15) ||\r\n        (num %= 10) > 4 ||\r\n        num === 0\r\n          ? 2\r\n          : num === 1\r\n          ? 0\r\n          : 1\r\n      ];\r\n    },\r\n    wordEndEn: function(num, words) {\r\n      return words[num > 1 ? 1 : 0];\r\n    },\r\n    nextPage: function(data) {\r\n      let position = null;\r\n      let nextPagingInfo = null;\r\n      if (data && data.get_listItemCollectionPosition()) {\r\n        nextPagingInfo = data.get_listItemCollectionPosition().get_pagingInfo();\r\n        const SP = window.SP;\r\n        position = new SP.ListItemCollectionPosition();\r\n        position.set_pagingInfo(nextPagingInfo);\r\n      }\r\n      return position;\r\n    },\r\n    prevPage: function(data) {\r\n      let position = null;\r\n      let prevPagingInfo = null;\r\n      if (data && data.itemAt(0)) {\r\n        prevPagingInfo =\r\n          \"PagedPrev=TRUE&Paged=TRUE&p_ID=\" + data.itemAt(0).get_id();\r\n        const SP = window.SP;\r\n        position = new SP.ListItemCollectionPosition();\r\n        position.set_pagingInfo(prevPagingInfo);\r\n      }\r\n      return position;\r\n    }\r\n  };\r\n  return publicFunctions;\r\n};\r\n","import { JSOM } from \"../jsom\";\nimport { phoneBookContentTypeId, tableRowLimit } from \"../../constants/config\";\nimport { columns } from \"../../constants/columns\";\nconst jsom = JSOM();\nconst { search } = jsom;\n\nlet viewFields = [];\ncolumns.map(column => {\n  viewFields = [...viewFields, column.searchKey];\n});\nviewFields = [...viewFields, \"ListItemID\", \"Created\"];\nlet startRow;\nexport const searchPhoneBookRequest = action => {\n  return new Promise((resolve, reject) => {\n    const { payload } = action;\n    let request;\n    if (payload) {\n      request = payload.request;\n      startRow = payload.position;\n    }\n    if (!startRow) startRow = 0;\n    console.log(request);\n    search\n      .text(\n        request,\n        [phoneBookContentTypeId],\n        viewFields,\n        tableRowLimit,\n        startRow\n      )\n      .then(data => {\n        const result = data.m_value.ResultTables[0].ResultRows;\n        const nextPage = startRow + tableRowLimit;\n        let prevPage = startRow - tableRowLimit;\n        if (prevPage < 1) prevPage = 0;\n        const count = data.m_value.ResultTables[0].TotalRows;\n        resolve({ result, count, nextPage, prevPage });\n      });\n  });\n};\n","import { createActions } from \"redux-actions\";\r\n\r\nconst {\r\n  getUser,\r\n  getUserSuccess,\r\n  getUserFailure\r\n} = createActions(\r\n  \"GET_USER\",\r\n  \"GET_USER_SUCCESS\",\r\n  \"GET_USER_FAILURE\"\r\n);\r\n\r\nexport {\r\n  getUser,\r\n  getUserSuccess,\r\n  getUserFailure\r\n};\r\n","import { createActions } from \"redux-actions\";\n\nconst {\n  getPhoneBook,\n  getPhoneBookSuccess,\n  getPhoneBookFailure,\n  searchPhoneBook,\n  searchPhoneBookSuccess,\n  searchPhoneBookFailure\n} = createActions(\n  \"GET_PHONE_BOOK\",\n  \"GET_PHONE_BOOK_SUCCESS\",\n  \"GET_PHONE_BOOK_FAILURE\",\n  \"SEARCH_PHONE_BOOK\",\n  \"SEARCH_PHONE_BOOK_SUCCESS\",\n  \"SEARCH_PHONE_BOOK_FAILURE\"\n);\n\nexport {\n  getPhoneBook,\n  getPhoneBookSuccess,\n  getPhoneBookFailure,\n  searchPhoneBook,\n  searchPhoneBookSuccess,\n  searchPhoneBookFailure\n};\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport { getUserRequest } from \"../api/requests\";\nimport { getUser, getUserSuccess, getUserFailure } from \"../actions\";\n\nfunction* getUserSaga(action) {\n  try {\n    const response = yield call(getUserRequest, action);\n    yield put(getUserSuccess(response));\n  } catch (error) {\n    console.log(error);\n    yield put(getUserFailure(error));\n  }\n}\n\nexport function* userWatcher() {\n  yield takeEvery(getUser.toString(), getUserSaga);\n}\n","import { call, takeEvery, put } from \"redux-saga/effects\";\nimport { getPhoneBookRequest, searchPhoneBookRequest } from \"../api/requests\";\nimport {\n  getPhoneBook,\n  getPhoneBookFailure,\n  getPhoneBookSuccess\n} from \"../actions\";\n\nfunction* getPhoneBookSaga(action) {\n  try {\n    const request = action.payload && action.payload.request;\n    let response;\n    if (request && request !== \"\") {\n      response = yield call(searchPhoneBookRequest, action);\n    } else {\n      response = yield call(getPhoneBookRequest, action);\n    }\n    yield put(getPhoneBookSuccess(response));\n  } catch (error) {\n    console.log(error);\n    yield put(getPhoneBookFailure(error));\n  }\n}\n\nexport function* phoneBookWatcher() {\n  yield takeEvery(getPhoneBook.toString(), getPhoneBookSaga);\n}\n","import { fork } from \"redux-saga/effects\";\nimport { userWatcher } from \"./user\";\nimport { phoneBookWatcher } from \"./phonebook\";\n\nexport default function*() {\n  yield fork(userWatcher);\n  yield fork(phoneBookWatcher);\n}\n","import { handleActions } from \"redux-actions\";\r\nimport { combineReducers } from \"redux\";\r\nimport { getUserSuccess } from \"../actions\";\r\n\r\nconst current = handleActions(\r\n  {\r\n    [getUserSuccess]: (state, action) => action.payload.current\r\n  },\r\n  {}\r\n);\r\nconst groups = handleActions(\r\n  {\r\n    [getUserSuccess]: (state, action) => action.payload.groups\r\n  },\r\n  []\r\n);\r\n\r\n\r\nconst user = combineReducers({\r\n  current,\r\n  groups,\r\n});\r\nexport { user };","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  getPhoneBookSuccess,\n  getPhoneBook\n} from \"../actions\";\n\nconst items = handleActions(\n  {\n    [getPhoneBookSuccess]: (state, action) => action.payload.result\n  },\n  []\n);\nconst itemsCount = handleActions(\n  {\n    [getPhoneBookSuccess]: (state, action) => action.payload.count\n  },\n  0\n);\nconst nextPage = handleActions(\n  {\n    [getPhoneBookSuccess]: (state, action) => action.payload.nextPage\n  },\n  0\n);\nconst prevPage = handleActions(\n  {\n    [getPhoneBookSuccess]: (state, action) => action.payload.prevPage\n  },\n  0\n);\nconst searchKey = handleActions(\n  {\n    [getPhoneBook]: (state, action) => {\n      if (action.payload && action.payload.request) {\n        return action.payload.request;\n      } else {\n        return \"\";\n      }\n    }\n  },\n  \"\"\n);\nconst current = handleActions(\n  {\n    [getPhoneBook]: (state, action) => {\n      if (!action.payload || !action.payload.position) {\n        return 1;\n      } else if (action.payload && action.payload.position && action.payload.next) {\n        return state + 1;\n      } else if (action.payload && action.payload.position && action.payload.prev) {\n        return state - 1;\n      } else {\n        return 1;\n      }\n    }\n  },\n  1\n);\n\nconst phonebook = combineReducers({\n  items,\n  itemsCount,\n  nextPage,\n  prevPage,\n  searchKey,\n  current\n});\nexport { phonebook };\n","import { handleActions } from \"redux-actions\";\nimport { combineReducers } from \"redux\";\nimport {\n  getPhoneBook,\n  getPhoneBookFailure,\n  getPhoneBookSuccess,\n  getUser,\n  getUserFailure,\n  getUserSuccess,\n  searchPhoneBook,\n  searchPhoneBookSuccess,\n  searchPhoneBookFailure\n} from \"../actions\";\n\nconst phoneBookStatus = handleActions(\n  {\n    [getPhoneBook]: () => \"LOADING\",\n    [getPhoneBookSuccess]: () => \"SUCCESS\",\n    [getPhoneBookFailure]: () => \"FAILURE\"\n  },\n  \"IDLE\"\n);\nconst searchPhoneBookStatus = handleActions(\n    {\n      [searchPhoneBook]: () => \"LOADING\",\n      [searchPhoneBookSuccess]: () => \"SUCCESS\",\n      [searchPhoneBookFailure]: () => \"FAILURE\"\n    },\n    \"IDLE\"\n  );\nconst userStatus = handleActions(\n  {\n    [getUser]: () => \"LOADING\",\n    [getUserSuccess]: () => \"SUCCESS\",\n    [getUserFailure]: () => \"FAILURE\"\n  },\n  \"IDLE\"\n);\n\nconst status = combineReducers({\n  phoneBookStatus,\n  searchPhoneBookStatus,\n  userStatus\n});\nexport { status };\n","import { handleActions } from \"redux-actions\";\nimport { getPhoneBook } from \"../actions\";\n\nconst search = handleActions(\n  {\n    [getPhoneBook]: (state, action) => {\n      if (action.payload && action.payload.search) {\n        return action.payload.search;\n      } else {\n        return {};\n      }\n    }\n  },\n  {}\n);\n\nexport { search };\n","import { combineReducers } from \"redux\";\r\nimport { user } from \"./user\";\r\nimport { phonebook } from \"./phonebook\";\r\nimport { status } from \"./status\";\r\nimport { search } from \"./search\";\r\n\r\nexport default combineReducers({\r\n  user,\r\n  phonebook,\r\n  status,\r\n  search\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport sagas from \"./sagas\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst createAppStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(sagaMiddleware)\r\n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n\r\n  sagaMiddleware.run(sagas);\r\n\r\n  return store;\r\n};\r\n\r\nexport default createAppStore;\r\n","import { createBrowserHistory } from 'history'\nexport default createBrowserHistory({\n    forceRefresh: true\n})","import React from \"react\";\nimport { createSelector } from \"reselect\";\nimport { columns } from \"../constants/columns\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nimport Linkify from \"react-linkify\";\n\nconst getPhoneBook = state => state.phonebook.items;\n\nconst searchConvertor = phonebook => {\n  let phoneBookForTable = [];\n  phonebook.map(item => {\n    let phoneBookObj = {};\n    columns.map(column => {\n      const { key, searchKey } = column;\n      let value = item[column.searchKey];\n      if (searchKey.indexOf(\"OWSDATE\") > 0) {\n        // value = new Date(value.replace(/Z/g, \"+0300\"));\n        value = new Date(value);\n      }\n      if (key.indexOf(\"Phone\") > -1) {\n        const phoneNumber = parsePhoneNumberFromString(value, \"RU\");\n        if (phoneNumber) {\n          value = phoneNumber;\n        }\n      }\n      if (key.indexOf(\"Site\") > -1) {\n        value = value && <Linkify>{value}</Linkify>;\n      }\n      phoneBookObj = { ...phoneBookObj, [key]: value };\n    });\n    phoneBookObj = { ...phoneBookObj, key: item.ListItemID };\n    phoneBookForTable = [...phoneBookForTable, phoneBookObj];\n  });\n  return phoneBookForTable;\n};\nconst listConvertor = phonebook => {\n  let phoneBookForTable = [];\n  phonebook.map(item => {\n    let phoneBookObj = {};\n    columns.map(column => {\n      const { key } = column;\n      let value = item[column.key];\n      if (key.indexOf(\"Phone\") > -1) {\n        const phoneNumber = parsePhoneNumberFromString(value, \"RU\");\n        if (phoneNumber) {\n          value = phoneNumber;\n        }\n      }\n      if (key.indexOf(\"Site\") > -1) {\n        value = value && <Linkify>{value}</Linkify>;\n      }\n      phoneBookObj = { ...phoneBookObj, [key]: value };\n    });\n    phoneBookObj = { ...phoneBookObj, key: item.ID };\n    phoneBookForTable = [...phoneBookForTable, phoneBookObj];\n  });\n  return phoneBookForTable;\n};\n\nexport const selectPhoneBook = createSelector(\n  [getPhoneBook],\n  phonebook => {\n    let phoneBookForTable = [];\n    if (phonebook.length > 0 && phonebook[0].Rank) {\n      phoneBookForTable = searchConvertor(phonebook);\n    } else {\n      phoneBookForTable = listConvertor(phonebook);\n    }\n    return phoneBookForTable;\n  }\n);\n","import { createSelector } from \"reselect\";\n\nconst getStatus = state => {\n    const searchStatus = state.status.searchPhoneBookStatus;\n    const getStatus = state.status.phoneBookStatus;\n    if (searchStatus === \"LOADING\" || getStatus === \"LOADING\") {\n        return true;\n    } else {\n        return false;\n    }\n  \n};\n\nexport const selectPhoneBookStatus = createSelector(\n  [getStatus],\n  status => {\n    return status;\n  }\n);\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { columns } from \"../../constants/columns\";\nimport { selectPhoneBook, selectPhoneBookStatus } from \"../../selectors\";\nimport * as phoneBookActions from \"../../actions/phonebook\";\nimport { Table, Input, Button, Icon } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport \"./table.css\";\nconst { getPhoneBook } = phoneBookActions;\n\nclass PhoneTable extends PureComponent {\n  state = {\n    searchText: {}\n  };\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters, dataIndex)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text => (\n      <Highlighter\n        highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n        searchWords={[this.props.search[dataIndex]]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n    )\n  });\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    let { getPhoneBook, search } = this.props;\n    let searchKey = \"\";\n    columns.map(column => {\n      if (column.key === dataIndex) searchKey = column.searchKey;\n    });\n    search = { ...search, [searchKey]: selectedKeys[0] };\n    let request = \"\";\n    const length = Object.keys(search).length;\n    Object.keys(search).map((key, index) => {\n      request +=\n        \"(\" +\n        (key !== \"search\" ? key + \":\" : \"\") +\n        search[key] +\n        \"*)\" +\n        (index !== length - 1 ? \" AND \" : \"\");\n    });\n    getPhoneBook({ request, search });\n    confirm();\n  };\n  handleReset = (clearFilters, dataIndex) => {\n    clearFilters();\n    let { getPhoneBook, search } = this.props;\n    delete search[dataIndex];\n    let request = \"\";\n    const length = Object.keys(search).length;\n    if (length > 0) {\n      Object.keys(search).map((key, index) => {\n        request +=\n          \"(\" +\n          (key !== \"search\" ? key + \":\" : \"\") +\n          search[key] +\n          \"*)\" +\n          (index !== length - 1 ? \" AND \" : \"\");\n      });\n    }\n    console.log(request, search);\n    getPhoneBook({ request, search });\n  };\n  render() {\n    const { phonebook, loading, handleView } = this.props;\n\n    let width = 0;\n    const newColumns = columns.map(column => {\n      if (column.key === \"Title\") {\n        column = { ...column, ...this.getColumnSearchProps(\"Title\") };\n      }\n      width += column.width;\n      return column;\n    });\n    return (\n      <Table\n        columns={newColumns}\n        dataSource={phonebook}\n        loading={loading}\n        scroll={{ x: width }}\n        onRow={(record, rowIndex) => {\n          return {\n            onClick: event => {\n              handleView(record.key);\n            }\n          };\n        }}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    phonebook: selectPhoneBook(state),\n    loading: selectPhoneBookStatus(state),\n    search: state.search\n  }),\n  { getPhoneBook }\n)(PhoneTable);\n","import React, { PureComponent, Fragment } from \"react\";\nimport { Col, Card, Icon } from \"antd\";\nconst { Meta } = Card;\n\nclass PhoneCard extends PureComponent {\n  state = {};\n  render() {\n    const { item, loading, handleView, handleEdit } = this.props;\n    return (\n      <Col span={8} className=\"flex\">\n        <Card\n          loading={loading}\n          key={item.key}\n          style={{ margin: \"0 0 20px 0\" }}\n          actions={[\n            <Icon type=\"eye\" onClick={e => handleView(item.key)} />,\n            <Icon type=\"edit\" onClick={e => handleEdit(item.key)} key=\"edit\" />\n          ]}\n        >\n          <Meta\n            title={item.Title}\n            description={\n              <Fragment>\n                <div className=\"phoneCard\">\n                  <p className=\"JobTitle\">{item.JobTitle1}</p>\n                  <p className=\"CompanyName\">{item.CompanyName}</p>\n                  {item.PhoneMain && (\n                    <p className=\"PhoneMain\">\n                      <Icon type=\"phone\" />{\" \"}\n                      {item.PhoneMain && item.PhoneMain.getURI && (\n                        <a href={item.PhoneMain.getURI()}>\n                          {item.PhoneMain.formatNational()}\n                        </a>\n                      )}\n                      {item.PhoneMain &&\n                        !item.PhoneMain.getURI &&\n                        item.PhoneMain}\n                    </p>\n                  )}\n                  {item.PhoneMobile && (\n                    <p className=\"PhoneMobile\">\n                      <Icon type=\"phone\" />{\" \"}\n                      {item.PhoneMobile && item.PhoneMobile.getURI && (\n                        <a href={item.PhoneMobile.getURI()}>\n                          {item.PhoneMobile.formatNational()}\n                        </a>\n                      )}\n                      {item.PhoneMobile &&\n                        !item.PhoneMobile.getURI &&\n                        item.PhoneMobile}\n                    </p>\n                  )}\n                  {item.EmailMain && (\n                    <p className=\"EmailMain\">\n                      <Icon type=\"mail\" />{\" \"}\n                      <a href={\"mailto:\" + item.EmailMain}>{item.EmailMain}</a>\n                    </p>\n                  )}\n                </div>\n              </Fragment>\n            }\n          />\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default PhoneCard;\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row } from \"antd\";\nimport { selectPhoneBook, selectPhoneBookStatus } from \"../../selectors\";\nimport PhoneCard from \"../card\";\nimport \"./grid.css\";\n\nclass PhoneGrid extends PureComponent {\n  state = {};\n\n  render() {\n    const { phonebook, loading, handleView, handleEdit } = this.props;\n    return (\n      <Row type=\"flex\" justify=\"start\">\n        {phonebook.map(item => (\n          <PhoneCard\n            handleView={handleView}\n            handleEdit={handleEdit}\n            loading={loading}\n            key={item.key}\n            item={item}\n          ></PhoneCard>\n        ))}\n      </Row>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    phonebook: selectPhoneBook(state),\n    loading: selectPhoneBookStatus(state)\n  }),\n  {}\n)(PhoneGrid);\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Pagination, Icon } from \"antd\";\nimport { getPhoneBook } from \"../../actions\";\nimport { tableRowLimit } from \"../../constants/config\";\nimport \"./paginator.css\";\n\nclass Paginator extends PureComponent {\n  state = {};\n  prev = () => {\n    const { getPhoneBook, prevPage, searchKey } = this.props;\n    getPhoneBook({ request: searchKey, position: prevPage, prev: true });\n  };\n  next = () => {\n    const { getPhoneBook, nextPage, searchKey } = this.props;\n    getPhoneBook({ request: searchKey, position: nextPage, next: true });\n  };\n  paginationRender = (current, type, originalElement) => {\n    const currentPage = this.props.current;\n    if (type === \"prev\") {\n      return (\n        <a className=\"ant-pagination-item-link\" onClick={this.prev}>\n          <Icon type=\"left\" />\n        </a>\n      );\n    }\n    if (type === \"next\") {\n      return (\n        <a className=\"ant-pagination-item-link\" onClick={this.next}>\n          <Icon type=\"right\" />\n        </a>\n      );\n    }\n    if (type === \"page\" && currentPage === current) {\n      return originalElement;\n    }\n  };\n  render() {\n    const { itemsTotal, current } = this.props;\n    const pagination = {\n      total: itemsTotal,\n      current,\n      pageSize: tableRowLimit,\n      itemRender: this.paginationRender\n    };\n    return <Pagination {...pagination} />;\n  }\n}\n\nexport default connect(\n  state => ({\n    itemsTotal: state.phonebook.itemsCount,\n    nextPage: state.phonebook.nextPage,\n    prevPage: state.phonebook.prevPage,\n    searchKey: state.phonebook.searchKey,\n    current: state.phonebook.current\n  }),\n  { getPhoneBook }\n)(Paginator);\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as userActions from \"../../actions/user\";\nimport * as phoneBookActions from \"../../actions/phonebook\";\nimport PhoneTable from \"../../components/table\";\nimport PhoneGrid from \"../../components/grid\";\nimport Paginator from \"../../components/paginator\";\nimport { Tabs, Icon, Layout, Breadcrumb } from \"antd\";\nimport { urlDefault } from \"../../constants/config\";\nimport \"./default.css\";\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\nconst { getUser } = userActions;\nconst { getPhoneBook } = phoneBookActions;\nclass Default extends PureComponent {\n  state = {};\n  componentDidMount() {\n    const { getPhoneBook } = this.props;\n    getPhoneBook();\n  }\n  handleView = e => {\n    const { history } = this.props;\n    history.push(urlDefault + \"/card/default.aspx?id=\" + e);\n  };\n  handleEdit = e => {\n    console.log(e);\n  };\n\n  render() {\n    let defaultActiveKey = \"table\";\n    if (window.innerWidth < 760) {\n      defaultActiveKey = \"cards\"\n    }\n    console.log(defaultActiveKey);\n    return (\n      <Fragment>\n        <Content className=\"breadContent\">\n          <Breadcrumb>\n            <Breadcrumb.Item href={urlDefault + \"/default.aspx\"}>\n              Main\n            </Breadcrumb.Item>\n          </Breadcrumb>\n        </Content>\n        <Content className=\"pageContent\">\n          <Tabs defaultActiveKey={defaultActiveKey}>\n            <TabPane\n              tab={\n                <span>\n                  <Icon type=\"table\" />\n                  Table\n                </span>\n              }\n              key=\"table\"\n            >\n              <PhoneTable\n                handleView={this.handleView}\n                handleEdit={this.handleEdit}\n              ></PhoneTable>\n            </TabPane>\n            <TabPane\n              tab={\n                <span>\n                  <Icon type=\"idcard\" />\n                  Cards\n                </span>\n              }\n              key=\"cards\"\n            >\n              <PhoneGrid\n                handleView={this.handleView}\n                handleEdit={this.handleEdit}\n              ></PhoneGrid>\n            </TabPane>\n          </Tabs>\n          <Paginator />\n        </Content>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    user: state.user\n  }),\n  { getUser, getPhoneBook }\n)(Default);\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectPhoneBook, selectPhoneBookStatus } from \"../../selectors\";\nimport { Descriptions, Icon } from \"antd\";\nimport Moment from \"react-moment\";\nimport { columns } from \"../../constants/columns\";\nimport \"./contactList.css\";\nimport wa from \"../../images/wa.svg\";\n// const wa = \"https://image.flaticon.com/icons/svg/33/33447.svg\";\nclass ContactList extends PureComponent {\n  state = {};\n  render() {\n    const { phonebook } = this.props;\n    return (\n      <Fragment>\n        {phonebook &&\n          phonebook.map(item => (\n            <Descriptions title={item.Title} key={item.key} bordered>\n              {columns &&\n                columns.map(\n                  column =>\n                    item[column.key] && (\n                      <Descriptions.Item\n                        span={3}\n                        key={column.key}\n                        label={column.title}\n                      >\n                        {column.key === \"EmailMain\" && (\n                          <Fragment>\n                            {item[column.key] && (\n                              <Fragment>\n                                <Icon type=\"mail\" className=\"mailIcon\" />\n                                <a\n                                  target=\"_blank\"\n                                  rel=\"noopener noreferrer\"\n                                  href={\n                                    \"https://outlook.office.com/owa/?path=/mail/action/compose&to=\" +\n                                    item[column.key]\n                                  }\n                                >\n                                  {item[column.key]}\n                                </a>\n                              </Fragment>\n                            )}\n                          </Fragment>\n                        )}\n                        {column.key.indexOf(\"Phone\") > -1 && (\n                          <Fragment>\n                            <Icon type=\"phone\" className=\"phoneIcon\" />\n                            {item[column.key] && item[column.key].getURI && (\n                              <a href={item[column.key].getURI()}>\n                                {item[column.key].formatNational()}\n                              </a>\n                            )}\n                            {item[column.key] &&\n                              !item[column.key].getURI &&\n                              item[column.key]}\n                          </Fragment>\n                        )}\n                        {column.key.indexOf(\"PhoneMobile\") > -1 && (\n                          <Fragment>\n                            <img src={wa} className=\"waIcon\" />\n                            {item[column.key] && item[column.key].getURI && (\n                              <a\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href={\n                                  \"https://wa.me/\" +\n                                  item[column.key].countryCallingCode +\n                                  item[column.key].nationalNumber\n                                }\n                              >\n                                {item[column.key].formatNational()}\n                              </a>\n                            )}\n                            {item[column.key] &&\n                              !item[column.key].getURI &&\n                              item[column.key]}\n                          </Fragment>\n                        )}\n                        {column.key === \"BirthDayDate\" && (\n                          <Fragment>\n                            {item[column.key] && (\n                              <Moment format=\"DD MMMM\">\n                                {item[column.key]}\n                              </Moment>\n                            )}\n                          </Fragment>\n                        )}\n                        {column.key !== \"PhoneBirthDayDateMain\" &&\n                          column.key !== \"EmailMain\" &&\n                          column.key.indexOf(\"Phone\") === -1 &&\n                          column.key !== \"BirthDayDate\" &&\n                          item[column.key]}\n                      </Descriptions.Item>\n                    )\n                )}\n              <Descriptions.Item\n                span={3}\n                key=\"share\"\n                label=\"Поделиться контактом\"\n              >\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={\n                    \"https://outlook.office.com/owa/?path=/mail/action/compose&subject=Контакт&body=\" +\n                    item.Title +\n                    \"+\" +\n                    (item.PhoneMobile\n                      ? item.PhoneMobile.formatNational()\n                      : \"\") +\n                    \"+\" +\n                    (item.EmailMain ? item.EmailMain : \"\")\n                  }\n                >\n                  <Icon type=\"mail\" className=\"mailIcon\" />\n                </a>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={\n                    \"https://wa.me/?text=\" +\n                    item.Title +\n                    \" \" +\n                    (item.PhoneMobile\n                      ? item.PhoneMobile.formatNational()\n                      : \"\") +\n                    \" \" +\n                    (item.EmailMain ? item.EmailMain : \"\")\n                  }\n                >\n                  <img src={wa} className=\"waIcon\" />\n                </a>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={\n                    \"https://outlook.office.com/owa/?path=calendar/view/month&rru=addevent&body=\" +\n                    (item.EmailMain ? item.EmailMain : \"\")\n                  }\n                >\n                  <Icon type=\"calendar\" className=\"calendarIcon\" />\n                </a>\n              </Descriptions.Item>\n            </Descriptions>\n          ))}\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    phonebook: selectPhoneBook(state),\n    loading: selectPhoneBookStatus(state)\n  }),\n  {}\n)(ContactList);\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as userActions from \"../../actions/user\";\nimport * as phoneBookActions from \"../../actions/phonebook\";\nimport ContactList from \"../../components/contactList\";\nimport { Layout, Breadcrumb } from \"antd\";\nimport { urlDefault } from \"../../constants/config\";\nconst { Content } = Layout;\n\nconst { getUser } = userActions;\nconst { getPhoneBook } = phoneBookActions;\nclass Contact extends PureComponent {\n  state = {};\n  componentDidMount() {\n    const { getPhoneBook } = this.props;\n    let params = new URLSearchParams(window.location.search);\n    const id = params.get(\"id\");\n    getPhoneBook({ID:id});\n  }\n  render() {\n    return (\n      <Fragment>\n        <Content className=\"breadContent\">\n          <Breadcrumb>\n            <Breadcrumb.Item href={urlDefault + \"/default.aspx\"}>\n              Main\n            </Breadcrumb.Item>\n            <Breadcrumb.Item>Contact</Breadcrumb.Item>\n          </Breadcrumb>\n        </Content>\n        <Content className=\"pageContent\">\n          <ContactList></ContactList>\n        </Content>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    user: state.user\n  }),\n  { getUser, getPhoneBook }\n)(Contact);\n","import React, { PureComponent, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Input } from \"antd\";\nimport { getPhoneBook } from \"../../actions\";\n\nconst { Search } = Input;\n\nclass PhoneSearch extends PureComponent {\n  state = {};\n  handleSearch = value => {\n    let { getPhoneBook, search } = this.props;\n    search = { ...search, search: value };\n    let request = \"\";\n    const length = Object.keys(search).length;\n    Object.keys(search).map((key, index) => {\n      request +=\n        \"(\" +\n        (key !== \"search\" ? key + \":\" : \"\") +\n        search[key] +\n        \"*)\" +\n        (index !== length - 1 ? \" AND \" : \"\");\n    });\n    getPhoneBook({ request, search });\n  };\n  handleChange = e => {\n    let { getPhoneBook, search } = this.props;\n    if (e.target.value === \"\") {\n      delete search.search;\n      let request = \"\";\n      const length = Object.keys(search).length;\n      if (length > 0) {\n        Object.keys(search).map((key, index) => {\n          request +=\n            \"(\" +\n            (key !== \"search\" ? key + \":\" : \"\") +\n            search[key] +\n            \"*)\" +\n            (index !== length - 1 ? \" AND \" : \"\");\n        });\n      }\n      getPhoneBook({ request, search });\n    } else if (e.target.value.length > 3) {\n      search = { ...search, search: e.target.value };\n      let request = \"\";\n      const length = Object.keys(search).length;\n      Object.keys(search).map((key, index) => {\n        request +=\n          \"(\" +\n          (key !== \"search\" ? key + \":\" : \"\") +\n          search[key] +\n          \"*)\" +\n          (index !== length - 1 ? \" AND \" : \"\");\n      });\n      getPhoneBook({ request, search });\n    }\n  };\n  render() {\n    return (\n      <Fragment>\n        <Search\n          placeholder=\"input search text\"\n          onSearch={this.handleSearch}\n          onChange={this.handleChange}\n          allowClear\n          style={{ width: \"100%\" }}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    search: state.search\n  }),\n  { getPhoneBook }\n)(PhoneSearch);\n","import React, { PureComponent } from \"react\";\nimport PhoneSearch from \"../search\";\nclass PhoneHeader extends PureComponent {\n  state = {};\n  render() {\n    return <PhoneSearch {...this.props}></PhoneSearch>;\n  }\n}\n\nexport default PhoneHeader;\n","import React, { Component } from \"react\";\nimport history from \"./history\";\nimport { connect } from \"react-redux\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport { Default, Contact } from \"./pages\";\nimport { urlDefault } from \"./constants/config\";\nimport { Layout, Breadcrumb } from \"antd\";\nimport PhoneHeader from \"./components/header\";\nimport * as userActions from \"./actions/user\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nconst { Header, Footer, Content } = Layout;\nconst { getUser } = userActions;\nclass App extends Component {\n  componentDidMount() {\n    const { getUser } = this.props;\n    getUser();\n  }\n  render() {\n    return (\n      <Layout>\n        <Router history={history}>\n          <Header>\n            <Content className=\"headerContent\">\n              <PhoneHeader history={history} />\n            </Content>\n          </Header>\n          <Layout>\n            <Route exact path={urlDefault + \"/:id\"} component={Default} />\n            <Route exact path={urlDefault + \"/card/:id\"} component={Contact} />\n          </Layout>\n          <Footer>footer</Footer>\n        </Router>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(\n  state => ({}),\n  { getUser }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createStore from \"./store\";\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n      <App /> \n    </Provider>, \n    document.getElementById(\"root\")\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}